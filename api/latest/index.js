Index.PACKAGES = {"kafka4m.producer" : [{"name" : "kafka4m.producer.AsProducerRecord", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/AsProducerRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/AsProducerRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/AsProducerRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/AsProducerRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/AsProducerRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/AsProducerRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/AsProducerRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/AsProducerRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/AsProducerRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/AsProducerRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/AsProducerRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/AsProducerRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/AsProducerRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/AsProducerRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asRecord", "tail" : "(value: A): ProducerRecord[K, V]", "member" : "kafka4m.producer.AsProducerRecord.asRecord", "link" : "kafka4m\/producer\/AsProducerRecord.html#asRecord(value:A):org.apache.kafka.clients.producer.ProducerRecord[AsProducerRecord.this.K,AsProducerRecord.this.V]", "kind" : "abstract def"}, {"member" : "kafka4m.producer.AsProducerRecord.V", "error" : "unsupported entity"}, {"member" : "kafka4m.producer.AsProducerRecord.K", "error" : "unsupported entity"}], "shortDescription" : "A typeclass to allow the publication of any record 'A' which can be converted into a producer record", "object" : "kafka4m\/producer\/AsProducerRecord$.html", "members_object" : [{"label" : "identity", "tail" : "(): AsProducerRecord[ProducerRecord[KEY, VALUE]]", "member" : "kafka4m.producer.AsProducerRecord.identity", "link" : "kafka4m\/producer\/AsProducerRecord$.html#identity[KEY,VALUE]:kafka4m.producer.AsProducerRecord[org.apache.kafka.clients.producer.ProducerRecord[KEY,VALUE]]", "kind" : "implicit def"}, {"label" : "lift", "tail" : "(asKeyValue: (A) ⇒ ProducerRecord[Key, Bytes]): AsProducerRecord[A]", "member" : "kafka4m.producer.AsProducerRecord.lift", "link" : "kafka4m\/producer\/AsProducerRecord$.html#lift[A](asKeyValue:A=>org.apache.kafka.clients.producer.ProducerRecord[kafka4m.Key,kafka4m.Bytes]):kafka4m.producer.AsProducerRecord[A]", "kind" : "implicit def"}, {"label" : "FromBytes", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromBytes", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromBytesextendsAsProducerRecord[Array[Byte]]withProductwithSerializable", "kind" : "case class"}, {"label" : "FromString", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromString", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromStringextendsAsProducerRecord[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "apply", "tail" : "(apr: AsProducerRecord[A]): AsProducerRecord[A]", "member" : "kafka4m.producer.AsProducerRecord.apply", "link" : "kafka4m\/producer\/AsProducerRecord$.html#apply[A](implicitapr:kafka4m.producer.AsProducerRecord[A]):kafka4m.producer.AsProducerRecord[A]", "kind" : "def"}, {"label" : "Aux", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.Aux", "link" : "kafka4m\/producer\/AsProducerRecord$.html#Aux[A,Key,Value]=kafka4m.producer.AsProducerRecord[A]{typeK=Key;typeV=Value}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/AsProducerRecord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/AsProducerRecord$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/AsProducerRecord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/AsProducerRecord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/AsProducerRecord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/AsProducerRecord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/AsProducerRecord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/AsProducerRecord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/AsProducerRecord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/AsProducerRecord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/AsProducerRecord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/AsProducerRecord$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/AsProducerRecord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/AsProducerRecord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/producer\/AsProducerRecord.html", "kind" : "trait"}, {"name" : "kafka4m.producer.LoggingCallback", "shortDescription" : "", "object" : "kafka4m\/producer\/LoggingCallback$.html", "members_object" : [{"label" : "onCompletion", "tail" : "(metadata: RecordMetadata, exception: Exception): Unit", "member" : "kafka4m.producer.LoggingCallback.onCompletion", "link" : "kafka4m\/producer\/LoggingCallback$.html#onCompletion(metadata:org.apache.kafka.clients.producer.RecordMetadata,exception:Exception):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/LoggingCallback$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/LoggingCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/LoggingCallback$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/LoggingCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/LoggingCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/LoggingCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/LoggingCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/LoggingCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/LoggingCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/LoggingCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/LoggingCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/LoggingCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/LoggingCallback$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/LoggingCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/LoggingCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/LoggingCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/LoggingCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.producer.PromiseCallback", "shortDescription" : "", "members_case class" : [{"label" : "future", "tail" : "(): Future[RecordMetadata]", "member" : "kafka4m.producer.PromiseCallback.future", "link" : "kafka4m\/producer\/PromiseCallback.html#future:scala.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "onCompletion", "tail" : "(metadata: RecordMetadata, exception: Exception): Unit", "member" : "kafka4m.producer.PromiseCallback.onCompletion", "link" : "kafka4m\/producer\/PromiseCallback.html#onCompletion(metadata:org.apache.kafka.clients.producer.RecordMetadata,exception:Exception):Unit", "kind" : "def"}, {"member" : "kafka4m.producer.PromiseCallback#<init>", "error" : "unsupported entity"}, {"label" : "promise", "tail" : ": Promise[RecordMetadata]", "member" : "kafka4m.producer.PromiseCallback.promise", "link" : "kafka4m\/producer\/PromiseCallback.html#promise:scala.concurrent.Promise[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/PromiseCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/PromiseCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/PromiseCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/PromiseCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/PromiseCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/PromiseCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/PromiseCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/PromiseCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/PromiseCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/PromiseCallback.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/PromiseCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/PromiseCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/PromiseCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/producer\/PromiseCallback.html", "kind" : "case class"}, {"name" : "kafka4m.producer.RichKafkaProducer", "shortDescription" : "", "object" : "kafka4m\/producer\/RichKafkaProducer$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.producer.RichKafkaProducer.close", "link" : "kafka4m\/producer\/RichKafkaProducer.html#close():Unit", "kind" : "def"}, {"label" : "sendRecord", "tail" : "(record: ProducerRecord[K, V], callback: Callback): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.sendRecord", "link" : "kafka4m\/producer\/RichKafkaProducer.html#sendRecord(record:org.apache.kafka.clients.producer.ProducerRecord[K,V],callback:org.apache.kafka.clients.producer.Callback):java.util.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "send", "tail" : "(kafkaTopic: String, key: K, value: V, callback: Callback, partition: Int): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.send", "link" : "kafka4m\/producer\/RichKafkaProducer.html#send(kafkaTopic:String,key:K,value:V,callback:org.apache.kafka.clients.producer.Callback,partition:Int):java.util.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "asConsumer", "tail" : "(fireAndForget: Boolean)(ev: Aux[A, K, V]): Consumer[A, Long]", "member" : "kafka4m.producer.RichKafkaProducer.asConsumer", "link" : "kafka4m\/producer\/RichKafkaProducer.html#asConsumer[A](fireAndForget:Boolean)(implicitev:kafka4m.producer.AsProducerRecord.Aux[A,K,V]):monix.reactive.Consumer[A,Long]", "kind" : "def"}, {"label" : "sendAsync", "tail" : "(kafkaTopic: String, key: K, value: V, callback: Callback, partition: Int): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.sendAsync", "link" : "kafka4m\/producer\/RichKafkaProducer.html#sendAsync(kafkaTopic:String,key:K,value:V,callback:org.apache.kafka.clients.producer.Callback,partition:Int):scala.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "publisher", "tail" : ": KafkaProducer[K, V]", "member" : "kafka4m.producer.RichKafkaProducer.publisher", "link" : "kafka4m\/producer\/RichKafkaProducer.html#publisher:org.apache.kafka.clients.producer.KafkaProducer[K,V]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/RichKafkaProducer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/RichKafkaProducer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/RichKafkaProducer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/RichKafkaProducer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/RichKafkaProducer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/RichKafkaProducer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/RichKafkaProducer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/RichKafkaProducer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/RichKafkaProducer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/RichKafkaProducer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/RichKafkaProducer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/RichKafkaProducer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/RichKafkaProducer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/RichKafkaProducer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/RichKafkaProducer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config, keySerializer: Serializer[K], valueSerializer: Serializer[V]): RichKafkaProducer[K, V]", "member" : "kafka4m.producer.RichKafkaProducer.apply", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#apply[K,V](rootConfig:com.typesafe.config.Config,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):kafka4m.producer.RichKafkaProducer[K,V]", "kind" : "def"}, {"label" : "byteArrayValues", "tail" : "(rootConfig: Config): RichKafkaProducer[String, Array[Byte]]", "member" : "kafka4m.producer.RichKafkaProducer.byteArrayValues", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#byteArrayValues(rootConfig:com.typesafe.config.Config):kafka4m.producer.RichKafkaProducer[String,Array[Byte]]", "kind" : "def"}, {"label" : "asResource", "tail" : "(rootConfig: Config): Resource[IO, RichKafkaProducer[String, Array[Byte]]]", "member" : "kafka4m.producer.RichKafkaProducer.asResource", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#asResource(rootConfig:com.typesafe.config.Config):cats.effect.Resource[cats.effect.IO,kafka4m.producer.RichKafkaProducer[String,Array[Byte]]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/RichKafkaProducer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/producer\/RichKafkaProducer.html", "kind" : "class"}], "kafka4m.consumer" : [{"name" : "kafka4m.consumer.KafkaAccess", "shortDescription" : "Stupid Kafka clients enforce that they're single-threaded, so goodbye reactive streams.", "object" : "kafka4m\/consumer\/KafkaAccess$.html", "members_object" : [{"label" : "apply", "tail" : "(capacity: Int, newResource: () ⇒ R)(sched: ExecutionContext): KafkaAccess[R]", "member" : "kafka4m.consumer.KafkaAccess.apply", "link" : "kafka4m\/consumer\/KafkaAccess$.html#apply[R](capacity:Int,newResource:()=>R)(implicitsched:scala.concurrent.ExecutionContext):kafka4m.consumer.KafkaAccess[R]", "kind" : "def"}, {"label" : "apply", "tail" : "(newResource: ⇒ R)(sched: ExecutionContext): KafkaAccess[R]", "member" : "kafka4m.consumer.KafkaAccess.apply", "link" : "kafka4m\/consumer\/KafkaAccess$.html#apply[R](newResource:=>R)(implicitsched:scala.concurrent.ExecutionContext):kafka4m.consumer.KafkaAccess[R]", "kind" : "def"}, {"label" : "UseResource", "tail" : "", "member" : "kafka4m.consumer.KafkaAccess.UseResource", "link" : "kafka4m\/consumer\/KafkaAccess$.html#UseResource[I,O]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/KafkaAccess$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/KafkaAccess$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/KafkaAccess$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/KafkaAccess$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/KafkaAccess$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/KafkaAccess$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/KafkaAccess$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaAccess$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaAccess$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaAccess$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/KafkaAccess$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/KafkaAccess$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/KafkaAccess$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/KafkaAccess$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/KafkaAccess$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/KafkaAccess$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/KafkaAccess$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/KafkaAccess$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/KafkaAccess$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.consumer.KafkaAccess.close", "link" : "kafka4m\/consumer\/KafkaAccess.html#close():Unit", "kind" : "def"}, {"label" : "loop", "tail" : "(resource: R): Unit", "member" : "kafka4m.consumer.KafkaAccess.loop", "link" : "kafka4m\/consumer\/KafkaAccess.html#loop(resource:R):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "kafka4m.consumer.KafkaAccess.run", "link" : "kafka4m\/consumer\/KafkaAccess.html#run():Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(thunk: (R) ⇒ A)(source: Enclosing): Future[A]", "member" : "kafka4m.consumer.KafkaAccess.apply", "link" : "kafka4m\/consumer\/KafkaAccess.html#apply[A](thunk:R=>A)(implicitsource:sourcecode.Enclosing):scala.concurrent.Future[A]", "kind" : "def"}, {"member" : "kafka4m.consumer.KafkaAccess#<init>", "error" : "unsupported entity"}, {"label" : "newResource", "tail" : ": () ⇒ R", "member" : "kafka4m.consumer.KafkaAccess.newResource", "link" : "kafka4m\/consumer\/KafkaAccess.html#newResource:()=>R", "kind" : "val"}, {"label" : "queue", "tail" : ": BlockingQueue[UseResource[R, _]]", "member" : "kafka4m.consumer.KafkaAccess.queue", "link" : "kafka4m\/consumer\/KafkaAccess.html#queue:java.util.concurrent.BlockingQueue[kafka4m.consumer.KafkaAccess.UseResource[R,_]]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/KafkaAccess.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/KafkaAccess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/KafkaAccess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/KafkaAccess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/KafkaAccess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/KafkaAccess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/KafkaAccess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/KafkaAccess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaAccess.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaAccess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaAccess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/KafkaAccess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/KafkaAccess.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/KafkaAccess.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/KafkaAccess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/KafkaAccess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/KafkaAccess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/KafkaAccess.html", "kind" : "object"}, {"name" : "kafka4m.consumer.KafkaConsumerFeed", "shortDescription" : "", "object" : "kafka4m\/consumer\/KafkaConsumerFeed$.html", "members_object" : [{"label" : "apply", "tail" : "(topic: String, data: BlockingQueue[ConsumerRecord[K, V]], feedTimeout: FiniteDuration, consumerAccess: KafkaAccess[RichKafkaConsumer[K, V]])(sched: Scheduler): KafkaConsumerFeed[K, V]", "member" : "kafka4m.consumer.KafkaConsumerFeed.apply", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#apply[K,V](topic:String,data:java.util.concurrent.BlockingQueue[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]],feedTimeout:scala.concurrent.duration.FiniteDuration,consumerAccess:kafka4m.consumer.KafkaAccess[kafka4m.consumer.RichKafkaConsumer[K,V]])(implicitsched:monix.execution.Scheduler):kafka4m.consumer.KafkaConsumerFeed[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(topic: String, consumerAccess: KafkaAccess[RichKafkaConsumer[K, V]])(sched: Scheduler): KafkaConsumerFeed[K, V]", "member" : "kafka4m.consumer.KafkaConsumerFeed.apply", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#apply[K,V](topic:String,consumerAccess:kafka4m.consumer.KafkaAccess[kafka4m.consumer.RichKafkaConsumer[K,V]])(implicitsched:monix.execution.Scheduler):kafka4m.consumer.KafkaConsumerFeed[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config)(sched: Scheduler): KafkaConsumerFeed[String, Array[Byte]]", "member" : "kafka4m.consumer.KafkaConsumerFeed.apply", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#apply(config:com.typesafe.config.Config)(implicitsched:monix.execution.Scheduler):kafka4m.consumer.KafkaConsumerFeed[String,Array[Byte]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/KafkaConsumerFeed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.consumer.KafkaConsumerFeed.close", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#close():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "kafka4m.consumer.KafkaConsumerFeed.run", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#run():Unit", "kind" : "def"}, {"label" : "unicast", "tail" : "(): Observable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.KafkaConsumerFeed.unicast", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#unicast:monix.reactive.Observable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "consumerAccess", "tail" : ": KafkaAccess[RichKafkaConsumer[K, V]]", "member" : "kafka4m.consumer.KafkaConsumerFeed.consumerAccess", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#consumerAccess:kafka4m.consumer.KafkaAccess[kafka4m.consumer.RichKafkaConsumer[K,V]]", "kind" : "val"}, {"label" : "feedTimeout", "tail" : ": FiniteDuration", "member" : "kafka4m.consumer.KafkaConsumerFeed.feedTimeout", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#feedTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "data", "tail" : ": BlockingQueue[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.KafkaConsumerFeed.data", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#data:java.util.concurrent.BlockingQueue[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "val"}, {"label" : "topic", "tail" : ": String", "member" : "kafka4m.consumer.KafkaConsumerFeed.topic", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#topic:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/KafkaConsumerFeed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/KafkaConsumerFeed.html", "kind" : "object"}, {"name" : "kafka4m.consumer.RebalanceListener", "shortDescription" : "", "object" : "kafka4m\/consumer\/RebalanceListener$.html", "members_object" : [{"label" : "onPartitionsAssigned", "tail" : "(partitions: Collection[TopicPartition]): Unit", "member" : "kafka4m.consumer.RebalanceListener.onPartitionsAssigned", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsAssigned(partitions:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "onPartitionsRevoked", "tail" : "(partitions: Collection[TopicPartition]): Unit", "member" : "kafka4m.consumer.RebalanceListener.onPartitionsRevoked", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsRevoked(partitions:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RebalanceListener$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RebalanceListener$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RebalanceListener$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RebalanceListener$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RebalanceListener$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RebalanceListener$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RebalanceListener$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RebalanceListener$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RebalanceListener$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RebalanceListener$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RebalanceListener$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RebalanceListener$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RebalanceListener$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RebalanceListener$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RebalanceListener$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.consumer.RichKafkaConsumer", "shortDescription" : "A means of driving a kafka-stream using the consumer (not kafka streaming) API", "object" : "kafka4m\/consumer\/RichKafkaConsumer$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.consumer.RichKafkaConsumer.close", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#close():Unit", "kind" : "def"}, {"label" : "status", "tail" : "(verbose: Boolean): String", "member" : "kafka4m.consumer.RichKafkaConsumer.status", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#status(verbose:Boolean):String", "kind" : "def"}, {"label" : "assignmentPartitions", "tail" : "(): List[Int]", "member" : "kafka4m.consumer.RichKafkaConsumer.assignmentPartitions", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#assignmentPartitions:List[Int]", "kind" : "def"}, {"label" : "poll", "tail" : "(timeout: Duration): Iterable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.poll", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#poll(timeout:java.time.Duration):Iterable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "committed", "tail" : "(partition: Int): OffsetAndMetadata", "member" : "kafka4m.consumer.RichKafkaConsumer.committed", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#committed(partition:Int):org.apache.kafka.clients.consumer.OffsetAndMetadata", "kind" : "def"}, {"label" : "positionFor", "tail" : "(partition: Int): Long", "member" : "kafka4m.consumer.RichKafkaConsumer.positionFor", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#positionFor(partition:Int):Long", "kind" : "def"}, {"label" : "seekToEnd", "tail" : "(partition: Int): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seekToEnd", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seekToEnd(partition:Int):Boolean", "kind" : "def"}, {"label" : "seekToBeginning", "tail" : "(partition: Int): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seekToBeginning", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seekToBeginning(partition:Int):Boolean", "kind" : "def"}, {"label" : "seek", "tail" : "(partition: Int, offset: Long): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seek", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seek(partition:Int,offset:Long):Boolean", "kind" : "def"}, {"label" : "asObservable", "tail" : "(): Observable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.asObservable", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asObservable:monix.reactive.Observable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "partitions", "tail" : "(): List[PartitionInfo]", "member" : "kafka4m.consumer.RichKafkaConsumer.partitions", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#partitions:List[org.apache.kafka.common.PartitionInfo]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(topic: String, listener: ConsumerRebalanceListener): Unit", "member" : "kafka4m.consumer.RichKafkaConsumer.subscribe", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#subscribe(topic:String,listener:org.apache.kafka.clients.consumer.ConsumerRebalanceListener):Unit", "kind" : "def"}, {"label" : "partitionsByTopic", "tail" : "(): Map[Key, List[PartitionInfo]]", "member" : "kafka4m.consumer.RichKafkaConsumer.partitionsByTopic", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#partitionsByTopic():Map[kafka4m.Key,List[org.apache.kafka.common.PartitionInfo]]", "kind" : "def"}, {"member" : "kafka4m.consumer.RichKafkaConsumer#<init>", "error" : "unsupported entity"}, {"label" : "defaultPollTimeout", "tail" : ": Duration", "member" : "kafka4m.consumer.RichKafkaConsumer.defaultPollTimeout", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#defaultPollTimeout:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "topic", "tail" : ": String", "member" : "kafka4m.consumer.RichKafkaConsumer.topic", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#topic:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V])(ioSched: Scheduler): RichKafkaConsumer[K, V]", "member" : "kafka4m.consumer.RichKafkaConsumer.apply", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#apply[K,V](rootConfig:com.typesafe.config.Config,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V])(implicitioSched:monix.execution.Scheduler):kafka4m.consumer.RichKafkaConsumer[K,V]", "kind" : "def"}, {"label" : "byteArrayValues", "tail" : "(rootConfig: Config)(ioSched: Scheduler): RichKafkaConsumer[String, Array[Byte]]", "member" : "kafka4m.consumer.RichKafkaConsumer.byteArrayValues", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#byteArrayValues(rootConfig:com.typesafe.config.Config)(implicitioSched:monix.execution.Scheduler):kafka4m.consumer.RichKafkaConsumer[String,Array[Byte]]", "kind" : "def"}, {"label" : "asResource", "tail" : "(rootConfig: Config)(ioSched: Scheduler): Resource[IO, RichKafkaConsumer[String, Array[Byte]]]", "member" : "kafka4m.consumer.RichKafkaConsumer.asResource", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asResource(rootConfig:com.typesafe.config.Config)(implicitioSched:monix.execution.Scheduler):cats.effect.Resource[cats.effect.IO,kafka4m.consumer.RichKafkaConsumer[String,Array[Byte]]]", "kind" : "def"}, {"label" : "asJavaDuration", "tail" : "(d: Duration): Duration", "member" : "kafka4m.consumer.RichKafkaConsumer.asJavaDuration", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asJavaDuration(d:scala.concurrent.duration.Duration):java.time.Duration", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/consumer\/RichKafkaConsumer.html", "kind" : "class"}, {"name" : "kafka4m.consumer.TopicStatus", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "kafka4m.consumer.TopicStatus.toString", "link" : "kafka4m\/consumer\/TopicStatus.html#toString():String", "kind" : "def"}, {"member" : "kafka4m.consumer.TopicStatus#<init>", "error" : "unsupported entity"}, {"label" : "partitions", "tail" : ": Seq[PartitionInfo]", "member" : "kafka4m.consumer.TopicStatus.partitions", "link" : "kafka4m\/consumer\/TopicStatus.html#partitions:Seq[org.apache.kafka.common.PartitionInfo]", "kind" : "val"}, {"label" : "topic", "tail" : ": String", "member" : "kafka4m.consumer.TopicStatus.topic", "link" : "kafka4m\/consumer\/TopicStatus.html#topic:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/TopicStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/TopicStatus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/TopicStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/TopicStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/TopicStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/TopicStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/TopicStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/TopicStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/TopicStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/TopicStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/TopicStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/TopicStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/TopicStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/TopicStatus.html", "kind" : "case class"}], "kafka4m.util" : [{"name" : "kafka4m.util.Env", "shortDescription" : "", "object" : "kafka4m\/util\/Env$.html", "members_object" : [{"label" : "close", "tail" : "(s: Scheduler): Unit", "member" : "kafka4m.util.Env.close", "link" : "kafka4m\/util\/Env$.html#close(s:monix.execution.Scheduler):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config): Env", "member" : "kafka4m.util.Env.apply", "link" : "kafka4m\/util\/Env$.html#apply(config:com.typesafe.config.Config):kafka4m.util.Env", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "kafka4m\/util\/Env$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Env$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Env$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Env$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Env$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Env$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Env$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Env$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Env$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Env$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Env$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Env$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Env$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Env$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Env$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Env$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Env$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.util.Env.close", "link" : "kafka4m\/util\/Env.html#close():Unit", "kind" : "def"}, {"member" : "kafka4m.util.Env#<init>", "error" : "unsupported entity"}, {"label" : "io", "tail" : ": Scheduler", "member" : "kafka4m.util.Env.io", "link" : "kafka4m\/util\/Env.html#io:monix.execution.Scheduler", "kind" : "val"}, {"label" : "compute", "tail" : ": Scheduler", "member" : "kafka4m.util.Env.compute", "link" : "kafka4m\/util\/Env.html#compute:monix.execution.Scheduler", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "kafka4m.util.Env.config", "link" : "kafka4m\/util\/Env.html#config:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Env.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Env.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Env.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Env.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Env.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Env.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Env.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Env.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Env.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Env.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Env.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Env.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Env.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/util\/Env.html", "kind" : "case class"}, {"name" : "kafka4m.util.KafkaThreads", "shortDescription" : "", "object" : "kafka4m\/util\/KafkaThreads$.html", "members_object" : [{"label" : "apply", "tail" : "(): Iterable[Thread]", "member" : "kafka4m.util.KafkaThreads.apply", "link" : "kafka4m\/util\/KafkaThreads$.html#apply():scala.collection.mutable.Iterable[Thread]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/KafkaThreads$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/KafkaThreads$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/KafkaThreads$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/KafkaThreads$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/KafkaThreads$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/KafkaThreads$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/KafkaThreads$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/KafkaThreads$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/KafkaThreads$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/KafkaThreads$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/KafkaThreads$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/KafkaThreads$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/KafkaThreads$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/KafkaThreads$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/KafkaThreads$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/KafkaThreads$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/KafkaThreads$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/KafkaThreads$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/KafkaThreads$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Props", "shortDescription" : "", "object" : "kafka4m\/util\/Props$.html", "members_object" : [{"label" : "newSchedulerService", "tail" : "(): ScheduledExecutorService", "member" : "kafka4m.util.Props.newSchedulerService", "link" : "kafka4m\/util\/Props$.html#newSchedulerService():java.util.concurrent.ScheduledExecutorService", "kind" : "def"}, {"label" : "replaceUniqueId", "tail" : "(str: String, uid: String): String", "member" : "kafka4m.util.Props.replaceUniqueId", "link" : "kafka4m\/util\/Props$.html#replaceUniqueId(str:String,uid:String):String", "kind" : "def"}, {"label" : "propertiesForConfig", "tail" : "(config: Config): Properties", "member" : "kafka4m.util.Props.propertiesForConfig", "link" : "kafka4m\/util\/Props$.html#propertiesForConfig(config:com.typesafe.config.Config):java.util.Properties", "kind" : "def"}, {"label" : "format", "tail" : "(all: Properties): String", "member" : "kafka4m.util.Props.format", "link" : "kafka4m\/util\/Props$.html#format(all:java.util.Properties):String", "kind" : "def"}, {"label" : "topic", "tail" : "(rootConfig: Config, subconfName: String, orElse: String*): String", "member" : "kafka4m.util.Props.topic", "link" : "kafka4m\/util\/Props$.html#topic(rootConfig:com.typesafe.config.Config,subconfName:String,orElse:String*):String", "kind" : "def"}, {"label" : "Bytes", "tail" : "", "member" : "kafka4m.util.Props.Bytes", "link" : "kafka4m\/util\/Props$.html#Bytes=Array[Byte]", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "kafka4m\/util\/Props$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Props$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Props$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Props$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Props$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Props$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Props$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Props$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Props$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Props$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Props$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Props$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Props$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Props$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Props$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Props$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Props$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Schedulers", "shortDescription" : "", "object" : "kafka4m\/util\/Schedulers$.html", "members_object" : [{"label" : "compute", "tail" : "(name: String, daemonic: Boolean): SchedulerService", "member" : "kafka4m.util.Schedulers.compute", "link" : "kafka4m\/util\/Schedulers$.html#compute(name:String,daemonic:Boolean):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "io", "tail" : "(name: String, daemonic: Boolean): SchedulerService", "member" : "kafka4m.util.Schedulers.io", "link" : "kafka4m\/util\/Schedulers$.html#io(name:String,daemonic:Boolean):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "LoggingReporter", "tail" : "", "member" : "kafka4m.util.Schedulers.LoggingReporter", "link" : "kafka4m\/util\/Schedulers$.html#LoggingReporter", "kind" : "object"}, {"label" : "using", "tail" : "(f: (Scheduler) ⇒ A): A", "member" : "kafka4m.util.Schedulers.using", "link" : "kafka4m\/util\/Schedulers$.html#using[A](f:monix.execution.Scheduler=>A):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Schedulers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Schedulers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Schedulers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Schedulers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Schedulers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Schedulers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Schedulers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Schedulers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Schedulers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Schedulers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Schedulers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Schedulers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Schedulers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Schedulers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Schedulers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Schedulers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Using", "shortDescription" : "come on scala 2.13!", "object" : "kafka4m\/util\/Using$.html", "members_object" : [{"label" : "apply", "tail" : "(resource: A)(thunk: (A) ⇒ T): T", "member" : "kafka4m.util.Using.apply", "link" : "kafka4m\/util\/Using$.html#apply[A<:AutoCloseable,T](resource:A)(thunk:A=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Using$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Using$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Using$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Using$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Using$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Using$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Using$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Using$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Using$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Using$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Using$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Using$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Using$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Using$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Using$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Using$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "kafka4m.admin" : [{"name" : "kafka4m.admin.RichKafkaAdmin", "shortDescription" : "A wrapper onto the admin API", "object" : "kafka4m\/admin\/RichKafkaAdmin$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.close", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#close():Unit", "kind" : "def"}, {"label" : "topics", "tail" : "(options: ListTopicsOptions)(ec: ExecutionContext): Future[Map[String, TopicListing]]", "member" : "kafka4m.admin.RichKafkaAdmin.topics", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#topics(options:org.apache.kafka.clients.admin.ListTopicsOptions)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Map[String,org.apache.kafka.clients.admin.TopicListing]]", "kind" : "def"}, {"label" : "createTopic", "tail" : "(topic: NewTopic): CreateTopicsResult", "member" : "kafka4m.admin.RichKafkaAdmin.createTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopic(topic:org.apache.kafka.clients.admin.NewTopic):org.apache.kafka.clients.admin.CreateTopicsResult", "kind" : "def"}, {"label" : "createTopic", "tail" : "(name: String, numPartitions: Int, replicationFactor: Short): CreateTopicsResult", "member" : "kafka4m.admin.RichKafkaAdmin.createTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopic(name:String,numPartitions:Int,replicationFactor:Short):org.apache.kafka.clients.admin.CreateTopicsResult", "kind" : "def"}, {"label" : "createTopicSync", "tail" : "(name: String, timeout: FiniteDuration): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.createTopicSync", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopicSync(name:String,timeout:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "createTopicBlocking", "tail" : "(topic: String, numPartitions: Int, replicationFactor: Short, timeout: FiniteDuration): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.createTopicBlocking", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopicBlocking(topic:String,numPartitions:Int,replicationFactor:Short,timeout:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "getOrCreateTopic", "tail" : "(topic: String, numPartitions: Int, replicationFactor: Short, timeout: FiniteDuration)(ec: ExecutionContext): Future[Option[String]]", "member" : "kafka4m.admin.RichKafkaAdmin.getOrCreateTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#getOrCreateTopic(topic:String,numPartitions:Int,replicationFactor:Short,timeout:scala.concurrent.duration.FiniteDuration)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Option[String]]", "kind" : "def"}, {"member" : "kafka4m.admin.RichKafkaAdmin#<init>", "error" : "unsupported entity"}, {"label" : "admin", "tail" : ": AdminClient", "member" : "kafka4m.admin.RichKafkaAdmin.admin", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#admin:org.apache.kafka.clients.admin.AdminClient", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/RichKafkaAdmin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config): RichKafkaAdmin", "member" : "kafka4m.admin.RichKafkaAdmin.apply", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#apply(rootConfig:com.typesafe.config.Config):kafka4m.admin.RichKafkaAdmin", "kind" : "def"}, {"label" : "ensureTopicBlocking", "tail" : "(config: Config)(ec: ExecutionContext): Option[String]", "member" : "kafka4m.admin.RichKafkaAdmin.ensureTopicBlocking", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#ensureTopicBlocking(config:com.typesafe.config.Config)(implicitec:scala.concurrent.ExecutionContext):Option[String]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/admin\/RichKafkaAdmin.html", "kind" : "class"}], "kafka4m" : [{"name" : "kafka4m.Kafka4mApp", "shortDescription" : "", "object" : "kafka4m\/Kafka4mApp$.html", "members_object" : [{"label" : "SecureConfigParsed", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigParsed", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigParsedextendsConfigApp.this.SecureConfigStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "SecureConfigDoesntExist", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigDoesntExist", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigDoesntExistextendsConfigApp.this.SecureConfigStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "SecureConfigState", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigState", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigStateextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "RichArgs", "tail" : "", "member" : "args4c.LowPriorityArgs4cImplicits.RichArgs", "link" : "kafka4m\/Kafka4mApp$.html#RichArgsextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichString", "tail" : "", "member" : "args4c.LowPriorityArgs4cImplicits.RichString", "link" : "kafka4m\/Kafka4mApp$.html#RichStringextendsAnyRef", "kind" : "implicit class"}, {"label" : "run", "tail" : "(config: Config): Result", "member" : "kafka4m.Kafka4mApp.run", "link" : "kafka4m\/Kafka4mApp$.html#run(config:com.typesafe.config.Config):kafka4m.Kafka4mApp.Result", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "kafka4m.Kafka4mApp.Result", "link" : "kafka4m\/Kafka4mApp$.html#Result=Unit", "kind" : "type"}, {"label" : "defaultSecureConfigArgFlag", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultSecureConfigArgFlag", "link" : "kafka4m\/Kafka4mApp$.html#defaultSecureConfigArgFlag:String", "kind" : "def"}, {"label" : "defaultSetupUserArgFlag", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultSetupUserArgFlag", "link" : "kafka4m\/Kafka4mApp$.html#defaultSetupUserArgFlag:String", "kind" : "def"}, {"label" : "defaultIgnoreDefaultSecureConfigArg", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultIgnoreDefaultSecureConfigArg", "link" : "kafka4m\/Kafka4mApp$.html#defaultIgnoreDefaultSecureConfigArg:String", "kind" : "def"}, {"label" : "secureConfigForArgs", "tail" : "(userArgs: Array[String], ignoreDefaultSecureConfigArg: String, pathToSecureConfigArg: String): SecureConfigState", "member" : "args4c.ConfigApp.secureConfigForArgs", "link" : "kafka4m\/Kafka4mApp$.html#secureConfigForArgs(userArgs:Array[String],ignoreDefaultSecureConfigArg:String,pathToSecureConfigArg:String):ConfigApp.this.SecureConfigState", "kind" : "def"}, {"label" : "pathToSecureConfigFromArgs", "tail" : "(userArgs: Array[String], pathToSecureConfigArg: String): Option[String]", "member" : "args4c.ConfigApp.pathToSecureConfigFromArgs", "link" : "kafka4m\/Kafka4mApp$.html#pathToSecureConfigFromArgs(userArgs:Array[String],pathToSecureConfigArg:String):Option[String]", "kind" : "def"}, {"label" : "onUnrecognizedUserArg", "tail" : "(allowedArgs: Set[String])(arg: String): Config", "member" : "args4c.ConfigApp.onUnrecognizedUserArg", "link" : "kafka4m\/Kafka4mApp$.html#onUnrecognizedUserArg(allowedArgs:Set[String])(arg:String):com.typesafe.config.Config", "kind" : "def"}, {"label" : "showValue", "tail" : "(value: String, config: Config): Unit", "member" : "args4c.ConfigApp.showValue", "link" : "kafka4m\/Kafka4mApp$.html#showValue(value:String,config:com.typesafe.config.Config):Unit", "kind" : "def"}, {"label" : "defaultConfig", "tail" : "(): Config", "member" : "args4c.ConfigApp.defaultConfig", "link" : "kafka4m\/Kafka4mApp$.html#defaultConfig():com.typesafe.config.Config", "kind" : "def"}, {"label" : "obscure", "tail" : "(securePathsOpt: Option[Seq[String]])(configPath: String, value: String): String", "member" : "args4c.ConfigApp.obscure", "link" : "kafka4m\/Kafka4mApp$.html#obscure(securePathsOpt:Option[Seq[String]])(configPath:String,value:String):String", "kind" : "def"}, {"label" : "isSetupSpecified", "tail" : "(userArgs: Array[String], setupArg: String): Boolean", "member" : "args4c.ConfigApp.isSetupSpecified", "link" : "kafka4m\/Kafka4mApp$.html#isSetupSpecified(userArgs:Array[String],setupArg:String):Boolean", "kind" : "def"}, {"label" : "runMain", "tail" : "(userArgs: Array[String], setupUserArgFlag: String, ignoreDefaultSecureConfigArg: String, pathToSecureConfigArgFlag: String): Option[Result]", "member" : "args4c.ConfigApp.runMain", "link" : "kafka4m\/Kafka4mApp$.html#runMain(userArgs:Array[String],setupUserArgFlag:String,ignoreDefaultSecureConfigArg:String,pathToSecureConfigArgFlag:String):Option[ConfigApp.this.Result]", "kind" : "def"}, {"label" : "runWithConfig", "tail" : "(userArgs: Array[String], pathToSecureConfig: Path, secureConfigState: SecureConfigState, parsedConfig: Config): Option[Result]", "member" : "args4c.ConfigApp.runWithConfig", "link" : "kafka4m\/Kafka4mApp$.html#runWithConfig(userArgs:Array[String],pathToSecureConfig:java.nio.file.Path,secureConfigState:ConfigApp.this.SecureConfigState,parsedConfig:com.typesafe.config.Config):Option[ConfigApp.this.Result]", "kind" : "def"}, {"label" : "configKeyForRequiredEntries", "tail" : ": String", "member" : "args4c.ConfigApp.configKeyForRequiredEntries", "link" : "kafka4m\/Kafka4mApp$.html#configKeyForRequiredEntries:String", "kind" : "val"}, {"label" : "missingRequiredConfigEntriesForConfig", "tail" : "(resolvedConfig: Config): Seq[String]", "member" : "args4c.ConfigApp.missingRequiredConfigEntriesForConfig", "link" : "kafka4m\/Kafka4mApp$.html#missingRequiredConfigEntriesForConfig(resolvedConfig:com.typesafe.config.Config):Seq[String]", "kind" : "def"}, {"label" : "secureConfig", "tail" : "(): SecureConfig", "member" : "args4c.ConfigApp.secureConfig", "link" : "kafka4m\/Kafka4mApp$.html#secureConfig:args4c.SecureConfig", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "args4c.ConfigApp.main", "link" : "kafka4m\/Kafka4mApp$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "configAsRichConfig", "tail" : "(c: Config): RichConfig", "member" : "args4c.LowPriorityArgs4cImplicits.configAsRichConfig", "link" : "kafka4m\/Kafka4mApp$.html#configAsRichConfig(c:com.typesafe.config.Config):args4c.RichConfig", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/Kafka4mApp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/Kafka4mApp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/Kafka4mApp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/Kafka4mApp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/Kafka4mApp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/Kafka4mApp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/Kafka4mApp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/Kafka4mApp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/Kafka4mApp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/Kafka4mApp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/Kafka4mApp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/Kafka4mApp$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/Kafka4mApp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/Kafka4mApp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/Kafka4mApp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/Kafka4mApp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};