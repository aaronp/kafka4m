Index.PACKAGES = {"kafka4m.producer" : [{"name" : "kafka4m.producer.AsProducerRecord", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/AsProducerRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/AsProducerRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/AsProducerRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/AsProducerRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/AsProducerRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/AsProducerRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/AsProducerRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/AsProducerRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/AsProducerRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/AsProducerRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/AsProducerRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/AsProducerRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/AsProducerRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/AsProducerRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asRecord", "tail" : "(value: A): ProducerRecord[K, V]", "member" : "kafka4m.producer.AsProducerRecord.asRecord", "link" : "kafka4m\/producer\/AsProducerRecord.html#asRecord(value:A):org.apache.kafka.clients.producer.ProducerRecord[AsProducerRecord.this.K,AsProducerRecord.this.V]", "kind" : "abstract def"}, {"member" : "kafka4m.producer.AsProducerRecord.V", "error" : "unsupported entity"}, {"member" : "kafka4m.producer.AsProducerRecord.K", "error" : "unsupported entity"}], "shortDescription" : "A typeclass to allow the publication of any record 'A' which can be converted into a producer record", "object" : "kafka4m\/producer\/AsProducerRecord$.html", "members_object" : [{"label" : "identity", "tail" : "(): AsProducerRecord[ProducerRecord[KEY, VALUE]]", "member" : "kafka4m.producer.AsProducerRecord.identity", "link" : "kafka4m\/producer\/AsProducerRecord$.html#identity[KEY,VALUE]:kafka4m.producer.AsProducerRecord[org.apache.kafka.clients.producer.ProducerRecord[KEY,VALUE]]", "kind" : "implicit def"}, {"label" : "lift", "tail" : "(asKeyValue: (A) ⇒ ProducerRecord[Key, Bytes]): AsProducerRecord[A]", "member" : "kafka4m.producer.AsProducerRecord.lift", "link" : "kafka4m\/producer\/AsProducerRecord$.html#lift[A](asKeyValue:A=>org.apache.kafka.clients.producer.ProducerRecord[kafka4m.Key,kafka4m.Bytes]):kafka4m.producer.AsProducerRecord[A]", "kind" : "implicit def"}, {"label" : "FromKeyAndBytes", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromKeyAndBytes", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromKeyAndBytesextendsAsProducerRecord[(String,Array[Byte])]withProductwithSerializable", "kind" : "case class"}, {"label" : "FromBytes", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromBytes", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromBytesextendsAsProducerRecord[Array[Byte]]withProductwithSerializable", "kind" : "case class"}, {"label" : "FromString", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromString", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromStringextendsAsProducerRecord[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "apply", "tail" : "(apr: AsProducerRecord[A]): AsProducerRecord[A]", "member" : "kafka4m.producer.AsProducerRecord.apply", "link" : "kafka4m\/producer\/AsProducerRecord$.html#apply[A](implicitapr:kafka4m.producer.AsProducerRecord[A]):kafka4m.producer.AsProducerRecord[A]", "kind" : "def"}, {"label" : "Aux", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.Aux", "link" : "kafka4m\/producer\/AsProducerRecord$.html#Aux[A,Key,Value]=kafka4m.producer.AsProducerRecord[A]{typeK=Key;typeV=Value}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/AsProducerRecord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/AsProducerRecord$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/AsProducerRecord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/AsProducerRecord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/AsProducerRecord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/AsProducerRecord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/AsProducerRecord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/AsProducerRecord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/AsProducerRecord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/AsProducerRecord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/AsProducerRecord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/AsProducerRecord$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/AsProducerRecord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/AsProducerRecord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/producer\/AsProducerRecord.html", "kind" : "trait"}, {"name" : "kafka4m.producer.LoggingCallback", "shortDescription" : "", "object" : "kafka4m\/producer\/LoggingCallback$.html", "members_object" : [{"label" : "onCompletion", "tail" : "(metadata: RecordMetadata, exception: Exception): Unit", "member" : "kafka4m.producer.LoggingCallback.onCompletion", "link" : "kafka4m\/producer\/LoggingCallback$.html#onCompletion(metadata:org.apache.kafka.clients.producer.RecordMetadata,exception:Exception):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/LoggingCallback$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/LoggingCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/LoggingCallback$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/LoggingCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/LoggingCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/LoggingCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/LoggingCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/LoggingCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/LoggingCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/LoggingCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/LoggingCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/LoggingCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/LoggingCallback$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/LoggingCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/LoggingCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/LoggingCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/LoggingCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.producer.PromiseCallback", "shortDescription" : "", "members_case class" : [{"label" : "future", "tail" : "(): Future[RecordMetadata]", "member" : "kafka4m.producer.PromiseCallback.future", "link" : "kafka4m\/producer\/PromiseCallback.html#future:scala.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "onCompletion", "tail" : "(metadata: RecordMetadata, exception: Exception): Unit", "member" : "kafka4m.producer.PromiseCallback.onCompletion", "link" : "kafka4m\/producer\/PromiseCallback.html#onCompletion(metadata:org.apache.kafka.clients.producer.RecordMetadata,exception:Exception):Unit", "kind" : "def"}, {"member" : "kafka4m.producer.PromiseCallback#<init>", "error" : "unsupported entity"}, {"label" : "promise", "tail" : ": Promise[RecordMetadata]", "member" : "kafka4m.producer.PromiseCallback.promise", "link" : "kafka4m\/producer\/PromiseCallback.html#promise:scala.concurrent.Promise[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/PromiseCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/PromiseCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/PromiseCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/PromiseCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/PromiseCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/PromiseCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/PromiseCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/PromiseCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/PromiseCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/PromiseCallback.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/PromiseCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/PromiseCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/PromiseCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/producer\/PromiseCallback.html", "kind" : "case class"}, {"name" : "kafka4m.producer.RichKafkaProducer", "shortDescription" : "", "object" : "kafka4m\/producer\/RichKafkaProducer$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.producer.RichKafkaProducer.close", "link" : "kafka4m\/producer\/RichKafkaProducer.html#close():Unit", "kind" : "def"}, {"label" : "sendRecord", "tail" : "(record: ProducerRecord[K, V], callback: Callback): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.sendRecord", "link" : "kafka4m\/producer\/RichKafkaProducer.html#sendRecord(record:org.apache.kafka.clients.producer.ProducerRecord[K,V],callback:org.apache.kafka.clients.producer.Callback):java.util.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "send", "tail" : "(kafkaTopic: String, key: K, value: V, callback: Callback, partition: Int): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.send", "link" : "kafka4m\/producer\/RichKafkaProducer.html#send(kafkaTopic:String,key:K,value:V,callback:org.apache.kafka.clients.producer.Callback,partition:Int):java.util.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "asConsumer", "tail" : "(fireAndForget: Boolean)(ev: Aux[A, K, V]): Consumer[A, Long]", "member" : "kafka4m.producer.RichKafkaProducer.asConsumer", "link" : "kafka4m\/producer\/RichKafkaProducer.html#asConsumer[A](fireAndForget:Boolean)(implicitev:kafka4m.producer.AsProducerRecord.Aux[A,K,V]):monix.reactive.Consumer[A,Long]", "kind" : "def"}, {"label" : "sendAsync", "tail" : "(kafkaTopic: String, key: K, value: V, callback: Callback, partition: Int): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.sendAsync", "link" : "kafka4m\/producer\/RichKafkaProducer.html#sendAsync(kafkaTopic:String,key:K,value:V,callback:org.apache.kafka.clients.producer.Callback,partition:Int):scala.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "publisher", "tail" : ": KafkaProducer[K, V]", "member" : "kafka4m.producer.RichKafkaProducer.publisher", "link" : "kafka4m\/producer\/RichKafkaProducer.html#publisher:org.apache.kafka.clients.producer.KafkaProducer[K,V]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/RichKafkaProducer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/RichKafkaProducer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/RichKafkaProducer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/RichKafkaProducer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/RichKafkaProducer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/RichKafkaProducer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/RichKafkaProducer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/RichKafkaProducer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/RichKafkaProducer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/RichKafkaProducer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/RichKafkaProducer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/RichKafkaProducer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/RichKafkaProducer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/RichKafkaProducer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/RichKafkaProducer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config, keySerializer: Serializer[K], valueSerializer: Serializer[V]): RichKafkaProducer[K, V]", "member" : "kafka4m.producer.RichKafkaProducer.apply", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#apply[K,V](rootConfig:com.typesafe.config.Config,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):kafka4m.producer.RichKafkaProducer[K,V]", "kind" : "def"}, {"label" : "byteArrayValues", "tail" : "(rootConfig: Config): RichKafkaProducer[String, Array[Byte]]", "member" : "kafka4m.producer.RichKafkaProducer.byteArrayValues", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#byteArrayValues(rootConfig:com.typesafe.config.Config):kafka4m.producer.RichKafkaProducer[String,Array[Byte]]", "kind" : "def"}, {"label" : "asResource", "tail" : "(rootConfig: Config): Resource[IO, RichKafkaProducer[String, Array[Byte]]]", "member" : "kafka4m.producer.RichKafkaProducer.asResource", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#asResource(rootConfig:com.typesafe.config.Config):cats.effect.Resource[cats.effect.IO,kafka4m.producer.RichKafkaProducer[String,Array[Byte]]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/RichKafkaProducer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/producer\/RichKafkaProducer.html", "kind" : "class"}], "kafka4m.consumer" : [{"name" : "kafka4m.consumer.RebalanceListener", "shortDescription" : "", "object" : "kafka4m\/consumer\/RebalanceListener$.html", "members_object" : [{"label" : "onPartitionsAssigned", "tail" : "(partitions: Collection[TopicPartition]): Unit", "member" : "kafka4m.consumer.RebalanceListener.onPartitionsAssigned", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsAssigned(partitions:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "onPartitionsRevoked", "tail" : "(partitions: Collection[TopicPartition]): Unit", "member" : "kafka4m.consumer.RebalanceListener.onPartitionsRevoked", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsRevoked(partitions:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RebalanceListener$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RebalanceListener$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RebalanceListener$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RebalanceListener$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RebalanceListener$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RebalanceListener$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RebalanceListener$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RebalanceListener$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RebalanceListener$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RebalanceListener$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RebalanceListener$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RebalanceListener$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RebalanceListener$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RebalanceListener$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RebalanceListener$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.consumer.RichKafkaConsumer", "shortDescription" : "A means of driving a kafka-stream using the consumer (not kafka streaming) API", "object" : "kafka4m\/consumer\/RichKafkaConsumer$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.consumer.RichKafkaConsumer.close", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#close():Unit", "kind" : "def"}, {"label" : "status", "tail" : "(verbose: Boolean): String", "member" : "kafka4m.consumer.RichKafkaConsumer.status", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#status(verbose:Boolean):String", "kind" : "def"}, {"label" : "assignmentPartitions", "tail" : "(): List[Int]", "member" : "kafka4m.consumer.RichKafkaConsumer.assignmentPartitions", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#assignmentPartitions:List[Int]", "kind" : "def"}, {"label" : "poll", "tail" : "(timeout: Duration): Iterable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.poll", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#poll(timeout:java.time.Duration):Iterable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "committed", "tail" : "(partition: Int): OffsetAndMetadata", "member" : "kafka4m.consumer.RichKafkaConsumer.committed", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#committed(partition:Int):org.apache.kafka.clients.consumer.OffsetAndMetadata", "kind" : "def"}, {"label" : "positionFor", "tail" : "(partition: Int): Long", "member" : "kafka4m.consumer.RichKafkaConsumer.positionFor", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#positionFor(partition:Int):Long", "kind" : "def"}, {"label" : "seekToEnd", "tail" : "(partition: Int): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seekToEnd", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seekToEnd(partition:Int):Boolean", "kind" : "def"}, {"label" : "seekToBeginning", "tail" : "(partition: Int): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seekToBeginning", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seekToBeginning(partition:Int):Boolean", "kind" : "def"}, {"label" : "seek", "tail" : "(partition: Int, offset: Long): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seek", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seek(partition:Int,offset:Long):Boolean", "kind" : "def"}, {"label" : "asObservable", "tail" : "(): Observable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.asObservable", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asObservable:monix.reactive.Observable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "partitions", "tail" : "(): List[PartitionInfo]", "member" : "kafka4m.consumer.RichKafkaConsumer.partitions", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#partitions:List[org.apache.kafka.common.PartitionInfo]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(topic: String, listener: ConsumerRebalanceListener): Unit", "member" : "kafka4m.consumer.RichKafkaConsumer.subscribe", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#subscribe(topic:String,listener:org.apache.kafka.clients.consumer.ConsumerRebalanceListener):Unit", "kind" : "def"}, {"label" : "partitionsByTopic", "tail" : "(): Map[Key, List[PartitionInfo]]", "member" : "kafka4m.consumer.RichKafkaConsumer.partitionsByTopic", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#partitionsByTopic():Map[kafka4m.Key,List[org.apache.kafka.common.PartitionInfo]]", "kind" : "def"}, {"member" : "kafka4m.consumer.RichKafkaConsumer#<init>", "error" : "unsupported entity"}, {"label" : "defaultPollTimeout", "tail" : ": Duration", "member" : "kafka4m.consumer.RichKafkaConsumer.defaultPollTimeout", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#defaultPollTimeout:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "topic", "tail" : ": String", "member" : "kafka4m.consumer.RichKafkaConsumer.topic", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#topic:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V])(ioSched: Scheduler): RichKafkaConsumer[K, V]", "member" : "kafka4m.consumer.RichKafkaConsumer.apply", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#apply[K,V](rootConfig:com.typesafe.config.Config,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V])(implicitioSched:monix.execution.Scheduler):kafka4m.consumer.RichKafkaConsumer[K,V]", "kind" : "def"}, {"label" : "byteArrayValues", "tail" : "(rootConfig: Config)(ioSched: Scheduler): RichKafkaConsumer[String, Array[Byte]]", "member" : "kafka4m.consumer.RichKafkaConsumer.byteArrayValues", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#byteArrayValues(rootConfig:com.typesafe.config.Config)(implicitioSched:monix.execution.Scheduler):kafka4m.consumer.RichKafkaConsumer[String,Array[Byte]]", "kind" : "def"}, {"label" : "asResource", "tail" : "(rootConfig: Config)(ioSched: Scheduler): Resource[IO, RichKafkaConsumer[String, Array[Byte]]]", "member" : "kafka4m.consumer.RichKafkaConsumer.asResource", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asResource(rootConfig:com.typesafe.config.Config)(implicitioSched:monix.execution.Scheduler):cats.effect.Resource[cats.effect.IO,kafka4m.consumer.RichKafkaConsumer[String,Array[Byte]]]", "kind" : "def"}, {"label" : "asJavaDuration", "tail" : "(d: Duration): Duration", "member" : "kafka4m.consumer.RichKafkaConsumer.asJavaDuration", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asJavaDuration(d:scala.concurrent.duration.Duration):java.time.Duration", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/consumer\/RichKafkaConsumer.html", "kind" : "class"}, {"name" : "kafka4m.consumer.TopicStatus", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "kafka4m.consumer.TopicStatus.toString", "link" : "kafka4m\/consumer\/TopicStatus.html#toString():String", "kind" : "def"}, {"member" : "kafka4m.consumer.TopicStatus#<init>", "error" : "unsupported entity"}, {"label" : "partitions", "tail" : ": Seq[PartitionInfo]", "member" : "kafka4m.consumer.TopicStatus.partitions", "link" : "kafka4m\/consumer\/TopicStatus.html#partitions:Seq[org.apache.kafka.common.PartitionInfo]", "kind" : "val"}, {"label" : "topic", "tail" : ": String", "member" : "kafka4m.consumer.TopicStatus.topic", "link" : "kafka4m\/consumer\/TopicStatus.html#topic:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/TopicStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/TopicStatus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/TopicStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/TopicStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/TopicStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/TopicStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/TopicStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/TopicStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/TopicStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/TopicStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/TopicStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/TopicStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/TopicStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/TopicStatus.html", "kind" : "case class"}], "kafka4m.io" : [{"name" : "kafka4m.io.Base64Writer", "shortDescription" : "An ETL configuration which will take Kafka records and write them to some directory", "object" : "kafka4m\/io\/Base64Writer$.html", "members_object" : [{"label" : "forConfig", "tail" : "(fromKafkaConfig: Config): Base64Writer[ConsumerRecord[Key, Bytes]]", "member" : "kafka4m.io.Base64Writer.forConfig", "link" : "kafka4m\/io\/Base64Writer$.html#forConfig(fromKafkaConfig:com.typesafe.config.Config):kafka4m.io.Base64Writer[org.apache.kafka.clients.consumer.ConsumerRecord[kafka4m.Key,kafka4m.Bytes]]", "kind" : "def"}, {"label" : "apply", "tail" : "(rootConfig: Config): Base64Writer[ConsumerRecord[Key, Bytes]]", "member" : "kafka4m.io.Base64Writer.apply", "link" : "kafka4m\/io\/Base64Writer$.html#apply(rootConfig:com.typesafe.config.Config):kafka4m.io.Base64Writer[org.apache.kafka.clients.consumer.ConsumerRecord[kafka4m.Key,kafka4m.Bytes]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/io\/Base64Writer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/Base64Writer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/Base64Writer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/Base64Writer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/Base64Writer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/Base64Writer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/Base64Writer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/Base64Writer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/Base64Writer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/Base64Writer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/Base64Writer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/Base64Writer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/Base64Writer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/Base64Writer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/Base64Writer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/Base64Writer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/Base64Writer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "write", "tail" : "(events: Observable[AppendEvent[A]]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.Base64Writer.write", "link" : "kafka4m\/io\/Base64Writer.html#write(events:monix.reactive.Observable[kafka4m.partitions.AppendEvent[A]]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "partition", "tail" : "(input: Observable[A]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.Base64Writer.partition", "link" : "kafka4m\/io\/Base64Writer.html#partition(input:monix.reactive.Observable[A]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "asEvents", "tail" : "(input: Observable[A]): Observable[AppendEvent[A]]", "member" : "kafka4m.io.Base64Writer.asEvents", "link" : "kafka4m\/io\/Base64Writer.html#asEvents(input:monix.reactive.Observable[A]):monix.reactive.Observable[kafka4m.partitions.AppendEvent[A]]", "kind" : "def"}, {"member" : "kafka4m.io.Base64Writer#<init>", "error" : "unsupported entity"}, {"label" : "timeBucketMinutes", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.timeBucketMinutes", "link" : "kafka4m\/io\/Base64Writer.html#timeBucketMinutes:Int", "kind" : "val"}, {"label" : "numberOfAppendsBeforeWriterFlush", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.numberOfAppendsBeforeWriterFlush", "link" : "kafka4m\/io\/Base64Writer.html#numberOfAppendsBeforeWriterFlush:Int", "kind" : "val"}, {"label" : "recordsReceivedBeforeClosingBucket", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.recordsReceivedBeforeClosingBucket", "link" : "kafka4m\/io\/Base64Writer.html#recordsReceivedBeforeClosingBucket:Int", "kind" : "val"}, {"label" : "dir", "tail" : ": Path", "member" : "kafka4m.io.Base64Writer.dir", "link" : "kafka4m\/io\/Base64Writer.html#dir:java.nio.file.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/Base64Writer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/Base64Writer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/Base64Writer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/Base64Writer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/Base64Writer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/Base64Writer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/Base64Writer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/Base64Writer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/Base64Writer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/Base64Writer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/Base64Writer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/Base64Writer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/Base64Writer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/io\/Base64Writer.html", "kind" : "case class"}, {"name" : "kafka4m.io.FileSink", "shortDescription" : "Means to write data to zips", "object" : "kafka4m\/io\/FileSink$.html", "members_object" : [{"label" : "zipped", "tail" : "(zipFile: Path, flushEvery: Int, zipLevel: Int): ZipAppenderObserver", "member" : "kafka4m.io.FileSink.zipped", "link" : "kafka4m\/io\/FileSink$.html#zipped(zipFile:java.nio.file.Path,flushEvery:Int,zipLevel:Int):kafka4m.io.ZipAppenderObserver", "kind" : "def"}, {"label" : "base64", "tail" : "(file: Path, flushEvery: Int): TextAppenderObserver", "member" : "kafka4m.io.FileSink.base64", "link" : "kafka4m\/io\/FileSink$.html#base64(file:java.nio.file.Path,flushEvery:Int):kafka4m.io.TextAppenderObserver", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/FileSink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/FileSink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/FileSink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/FileSink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/FileSink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/FileSink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/FileSink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/FileSink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/FileSink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/FileSink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/FileSink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/FileSink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/FileSink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/FileSink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/FileSink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/FileSink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.io.FileSource", "shortDescription" : "A means to get a stream of data from a directory, if only to make kafka4m useful out-of-the-box.", "object" : "kafka4m\/io\/FileSource$.html", "members_object" : [{"label" : "listChildren", "tail" : "(dir: Path): Iterator[Path]", "member" : "kafka4m.io.FileSource.listChildren", "link" : "kafka4m\/io\/FileSource$.html#listChildren(dir:java.nio.file.Path):Iterator[java.nio.file.Path]", "kind" : "def"}, {"label" : "keysAndData", "tail" : "(conf: EtlConfig): Observable[(String, Array[Byte])]", "member" : "kafka4m.io.FileSource.keysAndData", "link" : "kafka4m\/io\/FileSource$.html#keysAndData(conf:kafka4m.io.FileSource.EtlConfig):monix.reactive.Observable[(String,Array[Byte])]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config): Observable[(String, Array[Byte])]", "member" : "kafka4m.io.FileSource.apply", "link" : "kafka4m\/io\/FileSource$.html#apply(config:com.typesafe.config.Config):monix.reactive.Observable[(String,Array[Byte])]", "kind" : "def"}, {"label" : "EtlConfig", "tail" : "", "member" : "kafka4m.io.FileSource.EtlConfig", "link" : "kafka4m\/io\/FileSource$.html#EtlConfig", "kind" : "object"}, {"label" : "EtlConfig", "tail" : "", "member" : "kafka4m.io.FileSource.EtlConfig", "link" : "kafka4m\/io\/FileSource$.html#EtlConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/FileSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/FileSource$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/FileSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/FileSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/FileSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/FileSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/FileSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/FileSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/FileSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/FileSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/FileSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/FileSource$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/FileSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/FileSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/FileSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/FileSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.io.TextAppenderObserver", "shortDescription" : "", "object" : "kafka4m\/io\/TextAppenderObserver$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.io.TextAppenderObserver.close", "link" : "kafka4m\/io\/TextAppenderObserver.html#close():Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "kafka4m.io.TextAppenderObserver.size", "link" : "kafka4m\/io\/TextAppenderObserver.html#size():Int", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "kafka4m.io.TextAppenderObserver.isClosed", "link" : "kafka4m\/io\/TextAppenderObserver.html#isClosed():Boolean", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "kafka4m.io.TextAppenderObserver.onComplete", "link" : "kafka4m\/io\/TextAppenderObserver.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "kafka4m.io.TextAppenderObserver.onError", "link" : "kafka4m\/io\/TextAppenderObserver.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: String): Future[Ack]", "member" : "kafka4m.io.TextAppenderObserver.onNext", "link" : "kafka4m\/io\/TextAppenderObserver.html#onNext(elem:String):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "kafka4m.io.TextAppenderObserver.flush", "link" : "kafka4m\/io\/TextAppenderObserver.html#flush():Unit", "kind" : "def"}, {"label" : "appendLine", "tail" : "(line: String): Unit", "member" : "kafka4m.io.TextAppenderObserver.appendLine", "link" : "kafka4m\/io\/TextAppenderObserver.html#appendLine(line:String):Unit", "kind" : "def"}, {"member" : "kafka4m.io.TextAppenderObserver#<init>", "error" : "unsupported entity"}, {"label" : "file", "tail" : ": Path", "member" : "kafka4m.io.TextAppenderObserver.file", "link" : "kafka4m\/io\/TextAppenderObserver.html#file:java.nio.file.Path", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/io\/TextAppenderObserver.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/TextAppenderObserver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/TextAppenderObserver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/TextAppenderObserver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/TextAppenderObserver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/TextAppenderObserver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/TextAppenderObserver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/TextAppenderObserver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/TextAppenderObserver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/TextAppenderObserver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/TextAppenderObserver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/TextAppenderObserver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/TextAppenderObserver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/TextAppenderObserver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/TextAppenderObserver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromEvents", "tail" : "(dir: Path, flushEvery: Int, appendEvents: Observable[AppendEvent[A]])(arg0: HasTimestamp[A], arg1: Show[A]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.TextAppenderObserver.fromEvents", "link" : "kafka4m\/io\/TextAppenderObserver$.html#fromEvents[A](dir:java.nio.file.Path,flushEvery:Int,appendEvents:monix.reactive.Observable[kafka4m.partitions.AppendEvent[A]])(implicitevidence$1:kafka4m.partitions.HasTimestamp[A],implicitevidence$2:cats.Show[A]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "asFileName", "tail" : "(first: ZonedDateTime, bucket: TimeBucket): String", "member" : "kafka4m.io.TextAppenderObserver.asFileName", "link" : "kafka4m\/io\/TextAppenderObserver$.html#asFileName(first:java.time.ZonedDateTime,bucket:kafka4m.partitions.TimeBucket):String", "kind" : "def"}, {"label" : "ShowRecord", "tail" : "", "member" : "kafka4m.io.TextAppenderObserver.ShowRecord", "link" : "kafka4m\/io\/TextAppenderObserver$.html#ShowRecord", "kind" : "implicit object"}, {"label" : "Base64Line", "tail" : "", "member" : "kafka4m.io.TextAppenderObserver.Base64Line", "link" : "kafka4m\/io\/TextAppenderObserver$.html#Base64Line", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/TextAppenderObserver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/TextAppenderObserver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/TextAppenderObserver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/TextAppenderObserver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/TextAppenderObserver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/TextAppenderObserver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/TextAppenderObserver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/TextAppenderObserver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/TextAppenderObserver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/TextAppenderObserver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/TextAppenderObserver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/TextAppenderObserver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/TextAppenderObserver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/TextAppenderObserver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/io\/TextAppenderObserver.html", "kind" : "object"}, {"name" : "kafka4m.io.ZipAppenderObserver", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.io.ZipAppenderObserver.close", "link" : "kafka4m\/io\/ZipAppenderObserver.html#close():Unit", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "kafka4m.io.ZipAppenderObserver.onComplete", "link" : "kafka4m\/io\/ZipAppenderObserver.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "kafka4m.io.ZipAppenderObserver.onError", "link" : "kafka4m\/io\/ZipAppenderObserver.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: (String, Array[Byte])): Future[Ack]", "member" : "kafka4m.io.ZipAppenderObserver.onNext", "link" : "kafka4m\/io\/ZipAppenderObserver.html#onNext(elem:(String,Array[Byte])):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "flushCount", "tail" : ": Int", "member" : "kafka4m.io.ZipAppenderObserver.flushCount", "link" : "kafka4m\/io\/ZipAppenderObserver.html#flushCount:Int", "kind" : "var"}, {"label" : "zipOut", "tail" : ": ZipOutputStream", "member" : "kafka4m.io.ZipAppenderObserver.zipOut", "link" : "kafka4m\/io\/ZipAppenderObserver.html#zipOut:java.util.zip.ZipOutputStream", "kind" : "val"}, {"member" : "kafka4m.io.ZipAppenderObserver#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/io\/ZipAppenderObserver.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/ZipAppenderObserver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/ZipAppenderObserver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/ZipAppenderObserver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/ZipAppenderObserver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/ZipAppenderObserver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/ZipAppenderObserver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/ZipAppenderObserver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/ZipAppenderObserver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/ZipAppenderObserver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/ZipAppenderObserver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/ZipAppenderObserver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/ZipAppenderObserver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/ZipAppenderObserver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/ZipAppenderObserver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/ZipAppenderObserver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/ZipAppenderObserver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/io\/ZipAppenderObserver.html", "kind" : "class"}], "kafka4m.util" : [{"name" : "kafka4m.util.Env", "shortDescription" : "", "object" : "kafka4m\/util\/Env$.html", "members_object" : [{"label" : "close", "tail" : "(s: Scheduler): Unit", "member" : "kafka4m.util.Env.close", "link" : "kafka4m\/util\/Env$.html#close(s:monix.execution.Scheduler):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config): Env", "member" : "kafka4m.util.Env.apply", "link" : "kafka4m\/util\/Env$.html#apply(config:com.typesafe.config.Config):kafka4m.util.Env", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "kafka4m\/util\/Env$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Env$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Env$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Env$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Env$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Env$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Env$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Env$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Env$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Env$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Env$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Env$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Env$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Env$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Env$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Env$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Env$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.util.Env.close", "link" : "kafka4m\/util\/Env.html#close():Unit", "kind" : "def"}, {"member" : "kafka4m.util.Env#<init>", "error" : "unsupported entity"}, {"label" : "io", "tail" : ": Scheduler", "member" : "kafka4m.util.Env.io", "link" : "kafka4m\/util\/Env.html#io:monix.execution.Scheduler", "kind" : "val"}, {"label" : "compute", "tail" : ": Scheduler", "member" : "kafka4m.util.Env.compute", "link" : "kafka4m\/util\/Env.html#compute:monix.execution.Scheduler", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "kafka4m.util.Env.config", "link" : "kafka4m\/util\/Env.html#config:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Env.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Env.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Env.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Env.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Env.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Env.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Env.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Env.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Env.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Env.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Env.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Env.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Env.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Env.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/util\/Env.html", "kind" : "case class"}, {"name" : "kafka4m.util.KafkaThreads", "shortDescription" : "", "object" : "kafka4m\/util\/KafkaThreads$.html", "members_object" : [{"label" : "apply", "tail" : "(): Iterable[Thread]", "member" : "kafka4m.util.KafkaThreads.apply", "link" : "kafka4m\/util\/KafkaThreads$.html#apply():scala.collection.mutable.Iterable[Thread]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/KafkaThreads$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/KafkaThreads$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/KafkaThreads$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/KafkaThreads$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/KafkaThreads$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/KafkaThreads$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/KafkaThreads$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/KafkaThreads$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/KafkaThreads$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/KafkaThreads$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/KafkaThreads$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/KafkaThreads$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/KafkaThreads$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/KafkaThreads$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/KafkaThreads$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/KafkaThreads$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/KafkaThreads$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/KafkaThreads$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/KafkaThreads$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Metrics", "shortDescription" : "", "members_class" : [{"label" : "start", "tail" : "(scheduler: Scheduler): Cancelable", "member" : "kafka4m.util.Metrics.start", "link" : "kafka4m\/util\/Metrics.html#start(scheduler:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "incThroughput", "tail" : ": Task[Unit]", "member" : "kafka4m.util.Metrics.incThroughput", "link" : "kafka4m\/util\/Metrics.html#incThroughput:monix.eval.Task[Unit]", "kind" : "val"}, {"member" : "kafka4m.util.Metrics#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Metrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Metrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Metrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Metrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Metrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Metrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Metrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Metrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Metrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Metrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Metrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Metrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Metrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Metrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Metrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Metrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Metrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Metrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Metrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/util\/Metrics.html", "kind" : "class"}, {"name" : "kafka4m.util.Props", "shortDescription" : "", "object" : "kafka4m\/util\/Props$.html", "members_object" : [{"label" : "propertiesForConfig", "tail" : "(config: Config): Properties", "member" : "kafka4m.util.Props.propertiesForConfig", "link" : "kafka4m\/util\/Props$.html#propertiesForConfig(config:com.typesafe.config.Config):java.util.Properties", "kind" : "def"}, {"label" : "format", "tail" : "(all: Properties): String", "member" : "kafka4m.util.Props.format", "link" : "kafka4m\/util\/Props$.html#format(all:java.util.Properties):String", "kind" : "def"}, {"label" : "replaceUniqueId", "tail" : "(str: String, uid: String): String", "member" : "kafka4m.util.Props.replaceUniqueId", "link" : "kafka4m\/util\/Props$.html#replaceUniqueId(str:String,uid:String):String", "kind" : "def"}, {"label" : "topic", "tail" : "(rootConfig: Config, subconfName: String, orElse: String*): String", "member" : "kafka4m.util.Props.topic", "link" : "kafka4m\/util\/Props$.html#topic(rootConfig:com.typesafe.config.Config,subconfName:String,orElse:String*):String", "kind" : "def"}, {"label" : "Bytes", "tail" : "", "member" : "kafka4m.util.Props.Bytes", "link" : "kafka4m\/util\/Props$.html#Bytes=Array[Byte]", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "kafka4m\/util\/Props$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Props$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Props$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Props$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Props$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Props$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Props$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Props$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Props$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Props$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Props$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Props$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Props$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Props$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Props$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Props$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Props$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Schedulers", "shortDescription" : "", "object" : "kafka4m\/util\/Schedulers$.html", "members_object" : [{"label" : "compute", "tail" : "(name: String, daemonic: Boolean): SchedulerService", "member" : "kafka4m.util.Schedulers.compute", "link" : "kafka4m\/util\/Schedulers$.html#compute(name:String,daemonic:Boolean):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "io", "tail" : "(name: String, daemonic: Boolean): SchedulerService", "member" : "kafka4m.util.Schedulers.io", "link" : "kafka4m\/util\/Schedulers$.html#io(name:String,daemonic:Boolean):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "LoggingReporter", "tail" : "", "member" : "kafka4m.util.Schedulers.LoggingReporter", "link" : "kafka4m\/util\/Schedulers$.html#LoggingReporter", "kind" : "object"}, {"label" : "using", "tail" : "(f: (Scheduler) ⇒ A): A", "member" : "kafka4m.util.Schedulers.using", "link" : "kafka4m\/util\/Schedulers$.html#using[A](f:monix.execution.Scheduler=>A):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Schedulers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Schedulers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Schedulers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Schedulers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Schedulers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Schedulers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Schedulers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Schedulers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Schedulers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Schedulers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Schedulers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Schedulers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Schedulers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Schedulers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Schedulers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Schedulers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Using", "shortDescription" : "come on scala 2.13!", "object" : "kafka4m\/util\/Using$.html", "members_object" : [{"label" : "apply", "tail" : "(resource: A)(thunk: (A) ⇒ T): T", "member" : "kafka4m.util.Using.apply", "link" : "kafka4m\/util\/Using$.html#apply[A<:AutoCloseable,T](resource:A)(thunk:A=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Using$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Using$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Using$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Using$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Using$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Using$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Using$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Using$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Using$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Using$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Using$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Using$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Using$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Using$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Using$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Using$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "kafka4m.admin" : [{"name" : "kafka4m.admin.RichKafkaAdmin", "shortDescription" : "A wrapper onto the admin API", "object" : "kafka4m\/admin\/RichKafkaAdmin$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.close", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#close():Unit", "kind" : "def"}, {"label" : "topics", "tail" : "(options: ListTopicsOptions)(ec: ExecutionContext): Future[Map[String, TopicListing]]", "member" : "kafka4m.admin.RichKafkaAdmin.topics", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#topics(options:org.apache.kafka.clients.admin.ListTopicsOptions)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Map[String,org.apache.kafka.clients.admin.TopicListing]]", "kind" : "def"}, {"label" : "createTopic", "tail" : "(topic: NewTopic): CreateTopicsResult", "member" : "kafka4m.admin.RichKafkaAdmin.createTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopic(topic:org.apache.kafka.clients.admin.NewTopic):org.apache.kafka.clients.admin.CreateTopicsResult", "kind" : "def"}, {"label" : "createTopic", "tail" : "(name: String, numPartitions: Int, replicationFactor: Short): CreateTopicsResult", "member" : "kafka4m.admin.RichKafkaAdmin.createTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopic(name:String,numPartitions:Int,replicationFactor:Short):org.apache.kafka.clients.admin.CreateTopicsResult", "kind" : "def"}, {"label" : "createTopicSync", "tail" : "(name: String, timeout: FiniteDuration): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.createTopicSync", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopicSync(name:String,timeout:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "createTopicBlocking", "tail" : "(topic: String, numPartitions: Int, replicationFactor: Short, timeout: FiniteDuration): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.createTopicBlocking", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopicBlocking(topic:String,numPartitions:Int,replicationFactor:Short,timeout:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "getOrCreateTopic", "tail" : "(topic: String, numPartitions: Int, replicationFactor: Short, timeout: FiniteDuration)(ec: ExecutionContext): Future[Option[String]]", "member" : "kafka4m.admin.RichKafkaAdmin.getOrCreateTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#getOrCreateTopic(topic:String,numPartitions:Int,replicationFactor:Short,timeout:scala.concurrent.duration.FiniteDuration)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Option[String]]", "kind" : "def"}, {"member" : "kafka4m.admin.RichKafkaAdmin#<init>", "error" : "unsupported entity"}, {"label" : "admin", "tail" : ": AdminClient", "member" : "kafka4m.admin.RichKafkaAdmin.admin", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#admin:org.apache.kafka.clients.admin.AdminClient", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/RichKafkaAdmin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config): RichKafkaAdmin", "member" : "kafka4m.admin.RichKafkaAdmin.apply", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#apply(rootConfig:com.typesafe.config.Config):kafka4m.admin.RichKafkaAdmin", "kind" : "def"}, {"label" : "ensureTopicBlocking", "tail" : "(config: Config)(ec: ExecutionContext): Option[String]", "member" : "kafka4m.admin.RichKafkaAdmin.ensureTopicBlocking", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#ensureTopicBlocking(config:com.typesafe.config.Config)(implicitec:scala.concurrent.ExecutionContext):Option[String]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/admin\/RichKafkaAdmin.html", "kind" : "class"}], "kafka4m" : [{"name" : "kafka4m.Kafka4mApp", "shortDescription" : "An ETL entry point to read data into or out of kafka", "object" : "kafka4m\/Kafka4mApp$.html", "members_object" : [{"label" : "SecureConfigParsed", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigParsed", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigParsedextendsConfigApp.this.SecureConfigStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "SecureConfigDoesntExist", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigDoesntExist", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigDoesntExistextendsConfigApp.this.SecureConfigStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "SecureConfigState", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigState", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigStateextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "RichArgs", "tail" : "", "member" : "args4c.LowPriorityArgs4cImplicits.RichArgs", "link" : "kafka4m\/Kafka4mApp$.html#RichArgsextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichString", "tail" : "", "member" : "args4c.LowPriorityArgs4cImplicits.RichString", "link" : "kafka4m\/Kafka4mApp$.html#RichStringextendsAnyRef", "kind" : "implicit class"}, {"label" : "run", "tail" : "(config: Config): Unit", "member" : "kafka4m.Kafka4mApp.run", "link" : "kafka4m\/Kafka4mApp$.html#run(config:com.typesafe.config.Config):Unit", "kind" : "def"}, {"label" : "writeToKafka", "tail" : "(config: Config, data: Observable[(String, Array[Byte])])(scheduler: Scheduler): CancelableFuture[Long]", "member" : "kafka4m.Kafka4mApp.writeToKafka", "link" : "kafka4m\/Kafka4mApp$.html#writeToKafka(config:com.typesafe.config.Config,data:monix.reactive.Observable[(String,Array[Byte])])(implicitscheduler:monix.execution.Scheduler):monix.execution.CancelableFuture[Long]", "kind" : "def"}, {"label" : "writeToKafka", "tail" : "(config: Config)(scheduler: Scheduler): (Cancelable, CancelableFuture[Long])", "member" : "kafka4m.Kafka4mApp.writeToKafka", "link" : "kafka4m\/Kafka4mApp$.html#writeToKafka(config:com.typesafe.config.Config)(implicitscheduler:monix.execution.Scheduler):(monix.execution.Cancelable,monix.execution.CancelableFuture[Long])", "kind" : "def"}, {"label" : "reportThroughput", "tail" : "(perSecond: Int, total: Long): Unit", "member" : "kafka4m.Kafka4mApp.reportThroughput", "link" : "kafka4m\/Kafka4mApp$.html#reportThroughput(perSecond:Int,total:Long):Unit", "kind" : "def"}, {"label" : "readFromKafka", "tail" : "(config: Config)(scheduler: Scheduler): Observable[(TimeBucket, Path)]", "member" : "kafka4m.Kafka4mApp.readFromKafka", "link" : "kafka4m\/Kafka4mApp$.html#readFromKafka(config:com.typesafe.config.Config)(implicitscheduler:monix.execution.Scheduler):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "startupLog", "tail" : "(action: String, config: Config): String", "member" : "kafka4m.Kafka4mApp.startupLog", "link" : "kafka4m\/Kafka4mApp$.html#startupLog(action:String,config:com.typesafe.config.Config):String", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "kafka4m.Kafka4mApp.main", "link" : "kafka4m\/Kafka4mApp$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "kafka4m.Kafka4mApp.Result", "link" : "kafka4m\/Kafka4mApp$.html#Result=Unit", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/Kafka4mApp$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "defaultSecureConfigArgFlag", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultSecureConfigArgFlag", "link" : "kafka4m\/Kafka4mApp$.html#defaultSecureConfigArgFlag:String", "kind" : "def"}, {"label" : "defaultSetupUserArgFlag", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultSetupUserArgFlag", "link" : "kafka4m\/Kafka4mApp$.html#defaultSetupUserArgFlag:String", "kind" : "def"}, {"label" : "defaultIgnoreDefaultSecureConfigArg", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultIgnoreDefaultSecureConfigArg", "link" : "kafka4m\/Kafka4mApp$.html#defaultIgnoreDefaultSecureConfigArg:String", "kind" : "def"}, {"label" : "secureConfigForArgs", "tail" : "(userArgs: Array[String], ignoreDefaultSecureConfigArg: String, pathToSecureConfigArg: String): SecureConfigState", "member" : "args4c.ConfigApp.secureConfigForArgs", "link" : "kafka4m\/Kafka4mApp$.html#secureConfigForArgs(userArgs:Array[String],ignoreDefaultSecureConfigArg:String,pathToSecureConfigArg:String):ConfigApp.this.SecureConfigState", "kind" : "def"}, {"label" : "pathToSecureConfigFromArgs", "tail" : "(userArgs: Array[String], pathToSecureConfigArg: String): Option[String]", "member" : "args4c.ConfigApp.pathToSecureConfigFromArgs", "link" : "kafka4m\/Kafka4mApp$.html#pathToSecureConfigFromArgs(userArgs:Array[String],pathToSecureConfigArg:String):Option[String]", "kind" : "def"}, {"label" : "onUnrecognizedUserArg", "tail" : "(allowedArgs: Set[String])(arg: String): Config", "member" : "args4c.ConfigApp.onUnrecognizedUserArg", "link" : "kafka4m\/Kafka4mApp$.html#onUnrecognizedUserArg(allowedArgs:Set[String])(arg:String):com.typesafe.config.Config", "kind" : "def"}, {"label" : "showValue", "tail" : "(value: String, config: Config): Unit", "member" : "args4c.ConfigApp.showValue", "link" : "kafka4m\/Kafka4mApp$.html#showValue(value:String,config:com.typesafe.config.Config):Unit", "kind" : "def"}, {"label" : "defaultConfig", "tail" : "(): Config", "member" : "args4c.ConfigApp.defaultConfig", "link" : "kafka4m\/Kafka4mApp$.html#defaultConfig():com.typesafe.config.Config", "kind" : "def"}, {"label" : "obscure", "tail" : "(securePathsOpt: Option[Seq[String]])(configPath: String, value: String): String", "member" : "args4c.ConfigApp.obscure", "link" : "kafka4m\/Kafka4mApp$.html#obscure(securePathsOpt:Option[Seq[String]])(configPath:String,value:String):String", "kind" : "def"}, {"label" : "isSetupSpecified", "tail" : "(userArgs: Array[String], setupArg: String): Boolean", "member" : "args4c.ConfigApp.isSetupSpecified", "link" : "kafka4m\/Kafka4mApp$.html#isSetupSpecified(userArgs:Array[String],setupArg:String):Boolean", "kind" : "def"}, {"label" : "runMain", "tail" : "(userArgs: Array[String], setupUserArgFlag: String, ignoreDefaultSecureConfigArg: String, pathToSecureConfigArgFlag: String): Option[Result]", "member" : "args4c.ConfigApp.runMain", "link" : "kafka4m\/Kafka4mApp$.html#runMain(userArgs:Array[String],setupUserArgFlag:String,ignoreDefaultSecureConfigArg:String,pathToSecureConfigArgFlag:String):Option[ConfigApp.this.Result]", "kind" : "def"}, {"label" : "runWithConfig", "tail" : "(userArgs: Array[String], pathToSecureConfig: Path, secureConfigState: SecureConfigState, parsedConfig: Config): Option[Result]", "member" : "args4c.ConfigApp.runWithConfig", "link" : "kafka4m\/Kafka4mApp$.html#runWithConfig(userArgs:Array[String],pathToSecureConfig:java.nio.file.Path,secureConfigState:ConfigApp.this.SecureConfigState,parsedConfig:com.typesafe.config.Config):Option[ConfigApp.this.Result]", "kind" : "def"}, {"label" : "configKeyForRequiredEntries", "tail" : ": String", "member" : "args4c.ConfigApp.configKeyForRequiredEntries", "link" : "kafka4m\/Kafka4mApp$.html#configKeyForRequiredEntries:String", "kind" : "val"}, {"label" : "missingRequiredConfigEntriesForConfig", "tail" : "(resolvedConfig: Config): Seq[String]", "member" : "args4c.ConfigApp.missingRequiredConfigEntriesForConfig", "link" : "kafka4m\/Kafka4mApp$.html#missingRequiredConfigEntriesForConfig(resolvedConfig:com.typesafe.config.Config):Seq[String]", "kind" : "def"}, {"label" : "secureConfig", "tail" : "(): SecureConfig", "member" : "args4c.ConfigApp.secureConfig", "link" : "kafka4m\/Kafka4mApp$.html#secureConfig:args4c.SecureConfig", "kind" : "def"}, {"label" : "configAsRichConfig", "tail" : "(c: Config): RichConfig", "member" : "args4c.LowPriorityArgs4cImplicits.configAsRichConfig", "link" : "kafka4m\/Kafka4mApp$.html#configAsRichConfig(c:com.typesafe.config.Config):args4c.RichConfig", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/Kafka4mApp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/Kafka4mApp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/Kafka4mApp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/Kafka4mApp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/Kafka4mApp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/Kafka4mApp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/Kafka4mApp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/Kafka4mApp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/Kafka4mApp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/Kafka4mApp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/Kafka4mApp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/Kafka4mApp$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/Kafka4mApp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/Kafka4mApp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/Kafka4mApp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/Kafka4mApp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "kafka4m.partitions" : [{"name" : "kafka4m.partitions.AppendData", "shortDescription" : "", "members_case class" : [{"member" : "kafka4m.partitions.AppendData#<init>", "error" : "unsupported entity"}, {"label" : "record", "tail" : ": A", "member" : "kafka4m.partitions.AppendData.record", "link" : "kafka4m\/partitions\/AppendData.html#record:A", "kind" : "val"}, {"label" : "bucket", "tail" : ": TimeBucket", "member" : "kafka4m.partitions.AppendData.bucket", "link" : "kafka4m\/partitions\/AppendData.html#bucket:kafka4m.partitions.TimeBucket", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/AppendData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/AppendData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/AppendData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/AppendData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/AppendData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/AppendData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/AppendData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/AppendData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/AppendData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/AppendData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/AppendData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/AppendData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/AppendData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/AppendData.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.AppendEvent", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/AppendEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/AppendEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/AppendEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/AppendEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/AppendEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/AppendEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/AppendEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/AppendEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/AppendEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/AppendEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/AppendEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/AppendEvent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/AppendEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/AppendEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/AppendEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/AppendEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The data passing through will be partitioned into different buckets.", "trait" : "kafka4m\/partitions\/AppendEvent.html", "kind" : "trait"}, {"name" : "kafka4m.partitions.FlushBucket", "shortDescription" : "", "members_case class" : [{"member" : "kafka4m.partitions.FlushBucket#<init>", "error" : "unsupported entity"}, {"label" : "bucket", "tail" : ": TimeBucket", "member" : "kafka4m.partitions.FlushBucket.bucket", "link" : "kafka4m\/partitions\/FlushBucket.html#bucket:kafka4m.partitions.TimeBucket", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/FlushBucket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/FlushBucket.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/FlushBucket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/FlushBucket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/FlushBucket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/FlushBucket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/FlushBucket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/FlushBucket.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/FlushBucket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/FlushBucket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/FlushBucket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/FlushBucket.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/FlushBucket.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/FlushBucket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/FlushBucket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/FlushBucket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/FlushBucket.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.ForceFlushBuckets", "shortDescription" : "", "members_case class" : [{"member" : "kafka4m.partitions.ForceFlushBuckets#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/ForceFlushBuckets.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.HasTimestamp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/HasTimestamp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/HasTimestamp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/HasTimestamp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/HasTimestamp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/HasTimestamp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/HasTimestamp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/HasTimestamp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/HasTimestamp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/HasTimestamp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/HasTimestamp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/HasTimestamp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/HasTimestamp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/HasTimestamp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/HasTimestamp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "timestamp", "tail" : "(value: A): ZonedDateTime", "member" : "kafka4m.partitions.HasTimestamp.timestamp", "link" : "kafka4m\/partitions\/HasTimestamp.html#timestamp(value:A):java.time.ZonedDateTime", "kind" : "abstract def"}], "shortDescription" : "", "object" : "kafka4m\/partitions\/HasTimestamp$.html", "members_object" : [{"label" : "identity", "tail" : "", "member" : "kafka4m.partitions.HasTimestamp.identity", "link" : "kafka4m\/partitions\/HasTimestamp$.html#identity", "kind" : "implicit object"}, {"label" : "consumerRecordHasTimestamp", "tail" : "(): HasTimestamp[ConsumerRecord[K, V]]", "member" : "kafka4m.partitions.HasTimestamp.consumerRecordHasTimestamp", "link" : "kafka4m\/partitions\/HasTimestamp$.html#consumerRecordHasTimestamp[K,V]:kafka4m.partitions.HasTimestamp[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(ht: HasTimestamp[A]): HasTimestamp[A]", "member" : "kafka4m.partitions.HasTimestamp.apply", "link" : "kafka4m\/partitions\/HasTimestamp$.html#apply[A](implicitht:kafka4m.partitions.HasTimestamp[A]):kafka4m.partitions.HasTimestamp[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/HasTimestamp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/HasTimestamp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/HasTimestamp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/HasTimestamp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/HasTimestamp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/HasTimestamp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/HasTimestamp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/HasTimestamp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/HasTimestamp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/HasTimestamp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/HasTimestamp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/HasTimestamp$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/HasTimestamp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/HasTimestamp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/partitions\/HasTimestamp.html", "kind" : "trait"}, {"name" : "kafka4m.partitions.TimeBucket", "shortDescription" : "", "object" : "kafka4m\/partitions\/TimeBucket$.html", "members_object" : [{"label" : "apply", "tail" : "(minutes: Int, zonedDT: ZonedDateTime): TimeBucket", "member" : "kafka4m.partitions.TimeBucket.apply", "link" : "kafka4m\/partitions\/TimeBucket$.html#apply(minutes:Int,zonedDT:java.time.ZonedDateTime):kafka4m.partitions.TimeBucket", "kind" : "def"}, {"label" : "apply", "tail" : "(minutes: Int, epochMilli: Long): TimeBucket", "member" : "kafka4m.partitions.TimeBucket.apply", "link" : "kafka4m\/partitions\/TimeBucket$.html#apply(minutes:Int,epochMilli:Long):kafka4m.partitions.TimeBucket", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/TimeBucket$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/TimeBucket$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/TimeBucket$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/TimeBucket$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/TimeBucket$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/TimeBucket$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/TimeBucket$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/TimeBucket$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/TimeBucket$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/TimeBucket$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/TimeBucket$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/TimeBucket$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/TimeBucket$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/TimeBucket$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "kafka4m.partitions.TimeBucket#<init>", "error" : "unsupported entity"}, {"label" : "toMinute", "tail" : ": Int", "member" : "kafka4m.partitions.TimeBucket.toMinute", "link" : "kafka4m\/partitions\/TimeBucket.html#toMinute:Int", "kind" : "val"}, {"label" : "fromMinute", "tail" : ": Int", "member" : "kafka4m.partitions.TimeBucket.fromMinute", "link" : "kafka4m\/partitions\/TimeBucket.html#fromMinute:Int", "kind" : "val"}, {"label" : "hour", "tail" : ": Int", "member" : "kafka4m.partitions.TimeBucket.hour", "link" : "kafka4m\/partitions\/TimeBucket.html#hour:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/TimeBucket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/TimeBucket.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/TimeBucket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/TimeBucket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/TimeBucket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/TimeBucket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/TimeBucket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/TimeBucket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/TimeBucket.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/TimeBucket.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/TimeBucket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/TimeBucket.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.TimePartitionState", "shortDescription" : "we want to consume 'ConsumerRecords' from kafka and partition them into time buckets.", "object" : "kafka4m\/partitions\/TimePartitionState$.html", "members_object" : [{"label" : "apply", "tail" : "(recordsReceivedBeforeClosingBucket: Int, timeBucketSize: FiniteDuration)(arg0: HasTimestamp[A]): TimePartitionState[A]", "member" : "kafka4m.partitions.TimePartitionState.apply", "link" : "kafka4m\/partitions\/TimePartitionState$.html#apply[A](recordsReceivedBeforeClosingBucket:Int,timeBucketSize:scala.concurrent.duration.FiniteDuration)(implicitevidence$3:kafka4m.partitions.HasTimestamp[A]):kafka4m.partitions.TimePartitionState[A]", "kind" : "def"}, {"label" : "appendEvents", "tail" : "(source: Observable[A], recordsReceivedBeforeClosingBucket: Int, timeBucketSize: FiniteDuration)(arg0: HasTimestamp[A]): Observable[AppendEvent[A]]", "member" : "kafka4m.partitions.TimePartitionState.appendEvents", "link" : "kafka4m\/partitions\/TimePartitionState$.html#appendEvents[A](source:monix.reactive.Observable[A],recordsReceivedBeforeClosingBucket:Int,timeBucketSize:scala.concurrent.duration.FiniteDuration)(implicitevidence$2:kafka4m.partitions.HasTimestamp[A]):monix.reactive.Observable[kafka4m.partitions.AppendEvent[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/TimePartitionState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/TimePartitionState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/TimePartitionState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/TimePartitionState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/TimePartitionState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/TimePartitionState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/TimePartitionState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimePartitionState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimePartitionState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimePartitionState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/TimePartitionState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/TimePartitionState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/TimePartitionState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/TimePartitionState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/TimePartitionState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/TimePartitionState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/TimePartitionState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/TimePartitionState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/TimePartitionState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "update", "tail" : "(record: A, messageNumber: Long): (TimePartitionState[A], Seq[AppendEvent[A]])", "member" : "kafka4m.partitions.TimePartitionState.update", "link" : "kafka4m\/partitions\/TimePartitionState.html#update(record:A,messageNumber:Long):(kafka4m.partitions.TimePartitionState[A],Seq[kafka4m.partitions.AppendEvent[A]])", "kind" : "def"}, {"label" : "lastReceivedPerBucket", "tail" : ": Map[TimeBucket, Long]", "member" : "kafka4m.partitions.TimePartitionState.lastReceivedPerBucket", "link" : "kafka4m\/partitions\/TimePartitionState.html#lastReceivedPerBucket:Map[kafka4m.partitions.TimeBucket,Long]", "kind" : "val"}, {"label" : "timeBucketSizeInMinutes", "tail" : ": Int", "member" : "kafka4m.partitions.TimePartitionState.timeBucketSizeInMinutes", "link" : "kafka4m\/partitions\/TimePartitionState.html#timeBucketSizeInMinutes:Int", "kind" : "val"}, {"label" : "indicesRemaining", "tail" : ": Long", "member" : "kafka4m.partitions.TimePartitionState.indicesRemaining", "link" : "kafka4m\/partitions\/TimePartitionState.html#indicesRemaining:Long", "kind" : "val"}, {"label" : "recordsReceivedBeforeClosingBucket", "tail" : ": Int", "member" : "kafka4m.partitions.TimePartitionState.recordsReceivedBeforeClosingBucket", "link" : "kafka4m\/partitions\/TimePartitionState.html#recordsReceivedBeforeClosingBucket:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/TimePartitionState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/TimePartitionState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/TimePartitionState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/TimePartitionState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/TimePartitionState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/TimePartitionState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/TimePartitionState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimePartitionState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimePartitionState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimePartitionState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/TimePartitionState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/TimePartitionState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/TimePartitionState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/TimePartitionState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/TimePartitionState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/TimePartitionState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/TimePartitionState.html", "kind" : "case class"}]};