Index.PACKAGES = {"kafka4m.producer" : [{"name" : "kafka4m.producer.AsProducerRecord", "object" : "kafka4m\/producer\/AsProducerRecord$.html", "members_object" : [{"label" : "FromKeyAndBytes", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromKeyAndBytes", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromKeyAndBytesextendsAsProducerRecord[(String,Array[Byte])]withProductwithSerializable", "kind" : "case class"}, {"label" : "FromString", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.FromString", "link" : "kafka4m\/producer\/AsProducerRecord$.html#FromStringextendsAsProducerRecord[String]withProductwithSerializable", "kind" : "case class"}, {"label" : "liftForTopic", "tail" : "(topic: String)(f: (A) => KeyValue): Aux[A, Key, Bytes]", "member" : "kafka4m.producer.AsProducerRecord.liftForTopic", "link" : "kafka4m\/producer\/AsProducerRecord$.html#liftForTopic[A](topic:String)(f:A=>kafka4m.KeyValue):kafka4m.producer.AsProducerRecord.Aux[A,kafka4m.Key,kafka4m.Bytes]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => ProducerRecord[KafkaKey, KafkaValue]): Aux[A, KafkaKey, KafkaValue]", "member" : "kafka4m.producer.AsProducerRecord.lift", "link" : "kafka4m\/producer\/AsProducerRecord$.html#lift[A,KafkaKey,KafkaValue](f:A=>org.apache.kafka.clients.producer.ProducerRecord[KafkaKey,KafkaValue]):kafka4m.producer.AsProducerRecord.Aux[A,KafkaKey,KafkaValue]", "kind" : "def"}, {"label" : "apply", "tail" : "(apr: AsProducerRecord[A]): AsProducerRecord[A]", "member" : "kafka4m.producer.AsProducerRecord.apply", "link" : "kafka4m\/producer\/AsProducerRecord$.html#apply[A](implicitapr:kafka4m.producer.AsProducerRecord[A]):kafka4m.producer.AsProducerRecord[A]", "kind" : "def"}, {"label" : "Aux", "tail" : "", "member" : "kafka4m.producer.AsProducerRecord.Aux", "link" : "kafka4m\/producer\/AsProducerRecord$.html#Aux[A,Key,Value]=kafka4m.producer.AsProducerRecord[A]{typeK=Key;typeV=Value}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/AsProducerRecord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/AsProducerRecord$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/AsProducerRecord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/AsProducerRecord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/AsProducerRecord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/AsProducerRecord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/AsProducerRecord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/AsProducerRecord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/AsProducerRecord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/AsProducerRecord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/AsProducerRecord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/AsProducerRecord$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/AsProducerRecord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/AsProducerRecord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/producer\/AsProducerRecord.html", "kind" : "trait", "members_trait" : [{"label" : "contraMap", "tail" : "(f: (B) => A): AsProducerRecord[B]", "member" : "kafka4m.producer.AsProducerRecord.contraMap", "link" : "kafka4m\/producer\/AsProducerRecord.html#contraMap[B](f:B=>A):kafka4m.producer.AsProducerRecord[B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/AsProducerRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/AsProducerRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/AsProducerRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/AsProducerRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/AsProducerRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/AsProducerRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/AsProducerRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/AsProducerRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/AsProducerRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/AsProducerRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/AsProducerRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/AsProducerRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/AsProducerRecord.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/AsProducerRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/AsProducerRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/AsProducerRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asRecord", "tail" : "(value: A): ProducerRecord[K, V]", "member" : "kafka4m.producer.AsProducerRecord.asRecord", "link" : "kafka4m\/producer\/AsProducerRecord.html#asRecord(value:A):org.apache.kafka.clients.producer.ProducerRecord[AsProducerRecord.this.K,AsProducerRecord.this.V]", "kind" : "abstract def"}, {"member" : "kafka4m.producer.AsProducerRecord.V", "error" : "unsupported entity"}, {"member" : "kafka4m.producer.AsProducerRecord.K", "error" : "unsupported entity"}], "shortDescription" : "A typeclass to allow the publication of any record 'A' which can be converted into a producer record"}, {"name" : "kafka4m.producer.LoggingCallback", "shortDescription" : "", "object" : "kafka4m\/producer\/LoggingCallback$.html", "members_object" : [{"label" : "onCompletion", "tail" : "(metadata: RecordMetadata, exception: Exception): Unit", "member" : "kafka4m.producer.LoggingCallback.onCompletion", "link" : "kafka4m\/producer\/LoggingCallback$.html#onCompletion(metadata:org.apache.kafka.clients.producer.RecordMetadata,exception:Exception):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/LoggingCallback$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/LoggingCallback$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/LoggingCallback$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/LoggingCallback$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/LoggingCallback$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/LoggingCallback$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/LoggingCallback$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/LoggingCallback$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/LoggingCallback$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/LoggingCallback$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/LoggingCallback$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/LoggingCallback$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/LoggingCallback$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/LoggingCallback$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/LoggingCallback$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/LoggingCallback$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/LoggingCallback$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/LoggingCallback$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.producer.PromiseCallback", "shortDescription" : "", "members_case class" : [{"label" : "future", "tail" : "(): Future[RecordMetadata]", "member" : "kafka4m.producer.PromiseCallback.future", "link" : "kafka4m\/producer\/PromiseCallback.html#future:scala.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "onCompletion", "tail" : "(metadata: RecordMetadata, exception: Exception): Unit", "member" : "kafka4m.producer.PromiseCallback.onCompletion", "link" : "kafka4m\/producer\/PromiseCallback.html#onCompletion(metadata:org.apache.kafka.clients.producer.RecordMetadata,exception:Exception):Unit", "kind" : "def"}, {"member" : "kafka4m.producer.PromiseCallback#<init>", "error" : "unsupported entity"}, {"label" : "promise", "tail" : ": Promise[RecordMetadata]", "member" : "kafka4m.producer.PromiseCallback.promise", "link" : "kafka4m\/producer\/PromiseCallback.html#promise:scala.concurrent.Promise[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/producer\/PromiseCallback.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/PromiseCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/PromiseCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/PromiseCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/PromiseCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/PromiseCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/PromiseCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/PromiseCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/PromiseCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/PromiseCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/PromiseCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/PromiseCallback.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/PromiseCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/PromiseCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/PromiseCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/producer\/PromiseCallback.html", "kind" : "case class"}, {"name" : "kafka4m.producer.RichKafkaProducer", "shortDescription" : "", "object" : "kafka4m\/producer\/RichKafkaProducer$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.producer.RichKafkaProducer.close", "link" : "kafka4m\/producer\/RichKafkaProducer.html#close():Unit", "kind" : "def"}, {"label" : "sendRecord", "tail" : "(record: ProducerRecord[K, V], callback: Callback): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.sendRecord", "link" : "kafka4m\/producer\/RichKafkaProducer.html#sendRecord(record:org.apache.kafka.clients.producer.ProducerRecord[K,V],callback:org.apache.kafka.clients.producer.Callback):java.util.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "send", "tail" : "(kafkaTopic: String, key: K, value: V, callback: Callback, partition: Int): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.send", "link" : "kafka4m\/producer\/RichKafkaProducer.html#send(kafkaTopic:String,key:K,value:V,callback:org.apache.kafka.clients.producer.Callback,partition:Int):java.util.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "asConsumer", "tail" : "(fireAndForget: Boolean, continueOnError: Boolean)(ev: Aux[A, K, V]): Consumer[A, Long]", "member" : "kafka4m.producer.RichKafkaProducer.asConsumer", "link" : "kafka4m\/producer\/RichKafkaProducer.html#asConsumer[A](fireAndForget:Boolean,continueOnError:Boolean)(implicitev:kafka4m.producer.AsProducerRecord.Aux[A,K,V]):monix.reactive.Consumer[A,Long]", "kind" : "def"}, {"label" : "sendAsync", "tail" : "(kafkaTopic: String, key: K, value: V, callback: Callback, partition: Int): Future[RecordMetadata]", "member" : "kafka4m.producer.RichKafkaProducer.sendAsync", "link" : "kafka4m\/producer\/RichKafkaProducer.html#sendAsync(kafkaTopic:String,key:K,value:V,callback:org.apache.kafka.clients.producer.Callback,partition:Int):scala.concurrent.Future[org.apache.kafka.clients.producer.RecordMetadata]", "kind" : "def"}, {"label" : "publisher", "tail" : ": KafkaProducer[K, V]", "member" : "kafka4m.producer.RichKafkaProducer.publisher", "link" : "kafka4m\/producer\/RichKafkaProducer.html#publisher:org.apache.kafka.clients.producer.KafkaProducer[K,V]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/RichKafkaProducer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/RichKafkaProducer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/RichKafkaProducer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/RichKafkaProducer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/RichKafkaProducer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/RichKafkaProducer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/RichKafkaProducer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/RichKafkaProducer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/RichKafkaProducer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/RichKafkaProducer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/RichKafkaProducer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/RichKafkaProducer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/RichKafkaProducer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/RichKafkaProducer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/RichKafkaProducer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config, keySerializer: Serializer[K], valueSerializer: Serializer[V]): RichKafkaProducer[K, V]", "member" : "kafka4m.producer.RichKafkaProducer.apply", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#apply[K,V](rootConfig:com.typesafe.config.Config,keySerializer:org.apache.kafka.common.serialization.Serializer[K],valueSerializer:org.apache.kafka.common.serialization.Serializer[V]):kafka4m.producer.RichKafkaProducer[K,V]", "kind" : "def"}, {"label" : "byteArrayValues", "tail" : "(rootConfig: Config): RichKafkaProducer[String, Array[Byte]]", "member" : "kafka4m.producer.RichKafkaProducer.byteArrayValues", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#byteArrayValues(rootConfig:com.typesafe.config.Config):kafka4m.producer.RichKafkaProducer[String,Array[Byte]]", "kind" : "def"}, {"label" : "asResource", "tail" : "(rootConfig: Config): Resource[IO, RichKafkaProducer[String, Array[Byte]]]", "member" : "kafka4m.producer.RichKafkaProducer.asResource", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#asResource(rootConfig:com.typesafe.config.Config):cats.effect.Resource[cats.effect.IO,kafka4m.producer.RichKafkaProducer[String,Array[Byte]]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/producer\/RichKafkaProducer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/producer\/RichKafkaProducer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/producer\/RichKafkaProducer.html", "kind" : "class"}], "kafka4m.consumer" : [{"name" : "kafka4m.consumer.AckableRecord", "shortDescription" : "Represents a message with the components needed to commit the offsets\/partitions to Kafka", "object" : "kafka4m\/consumer\/AckableRecord$.html", "members_object" : [{"label" : "AckableRecordFunctor", "tail" : "", "member" : "kafka4m.consumer.AckableRecord.AckableRecordFunctor", "link" : "kafka4m\/consumer\/AckableRecord$.html#AckableRecordFunctor", "kind" : "implicit object"}, {"label" : "singleThreadedExecutor", "tail" : "(prepare: (Thread) => Thread): ExecutorService", "member" : "kafka4m.consumer.AckableRecord.singleThreadedExecutor", "link" : "kafka4m\/consumer\/AckableRecord$.html#singleThreadedExecutor(prepare:Thread=>Thread):java.util.concurrent.ExecutorService", "kind" : "def"}, {"label" : "singleThreadedExecutor", "tail" : "(name: String): ExecutorService", "member" : "kafka4m.consumer.AckableRecord.singleThreadedExecutor", "link" : "kafka4m\/consumer\/AckableRecord$.html#singleThreadedExecutor(name:String):java.util.concurrent.ExecutorService", "kind" : "def"}, {"label" : "singleThreadedScheduler", "tail" : "(name: String): SchedulerService", "member" : "kafka4m.consumer.AckableRecord.singleThreadedScheduler", "link" : "kafka4m\/consumer\/AckableRecord$.html#singleThreadedScheduler(name:String):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "withOffsets", "tail" : "(records: Observable[A])(arg0: HasRecord[A]): Observable[(PartitionOffsetState, A)]", "member" : "kafka4m.consumer.AckableRecord.withOffsets", "link" : "kafka4m\/consumer\/AckableRecord$.html#withOffsets[A](records:monix.reactive.Observable[A])(implicitevidence$1:kafka4m.consumer.HasRecord[A]):monix.reactive.Observable[(kafka4m.consumer.PartitionOffsetState,A)]", "kind" : "def"}, {"label" : "singleThreadObservable", "tail" : "(closeOnComplete: Boolean, kafkaScheduler: Scheduler)(makeConsumer: => RichKafkaConsumer[K, V]): Observable[(RichKafkaConsumer[K, V], ConsumerRecord[K, V])]", "member" : "kafka4m.consumer.AckableRecord.singleThreadObservable", "link" : "kafka4m\/consumer\/AckableRecord$.html#singleThreadObservable[K,V](closeOnComplete:Boolean,kafkaScheduler:monix.execution.Scheduler)(makeConsumer:=>kafka4m.consumer.RichKafkaConsumer[K,V]):monix.reactive.Observable[(kafka4m.consumer.RichKafkaConsumer[K,V],org.apache.kafka.clients.consumer.ConsumerRecord[K,V])]", "kind" : "def"}, {"label" : "apply", "tail" : "(closeOnComplete: Boolean, kafkaScheduler: Scheduler)(makeConsumer: => RichKafkaConsumer[K, V]): Observable[AckableRecord[ConsumerRecord[K, V]]]", "member" : "kafka4m.consumer.AckableRecord.apply", "link" : "kafka4m\/consumer\/AckableRecord$.html#apply[K,V](closeOnComplete:Boolean,kafkaScheduler:monix.execution.Scheduler)(makeConsumer:=>kafka4m.consumer.RichKafkaConsumer[K,V]):monix.reactive.Observable[kafka4m.consumer.AckableRecord[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/AckableRecord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/AckableRecord$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/AckableRecord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/AckableRecord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/AckableRecord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/AckableRecord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/AckableRecord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/AckableRecord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/AckableRecord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/AckableRecord$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/AckableRecord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/AckableRecord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/AckableRecord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/AckableRecord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/AckableRecord$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/AckableRecord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/AckableRecord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/AckableRecord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/AckableRecord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "map", "tail" : "(f: (A) => B): AckableRecord[B]", "member" : "kafka4m.consumer.AckableRecord.map", "link" : "kafka4m\/consumer\/AckableRecord.html#map[B](f:A=>B):kafka4m.consumer.AckableRecord[B]", "kind" : "final def"}, {"label" : "commitConsumedPosition", "tail" : "(): Future[Map[TopicPartition, OffsetAndMetadata]]", "member" : "kafka4m.consumer.AckableRecord.commitConsumedPosition", "link" : "kafka4m\/consumer\/AckableRecord.html#commitConsumedPosition():scala.concurrent.Future[Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]]", "kind" : "def"}, {"label" : "commitPosition", "tail" : "(): Future[Map[TopicPartition, OffsetAndMetadata]]", "member" : "kafka4m.consumer.AckableRecord.commitPosition", "link" : "kafka4m\/consumer\/AckableRecord.html#commitPosition():scala.concurrent.Future[Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]]", "kind" : "def"}, {"label" : "record", "tail" : ": A", "member" : "kafka4m.consumer.AckableRecord.record", "link" : "kafka4m\/consumer\/AckableRecord.html#record:A", "kind" : "val"}, {"label" : "offset", "tail" : ": PartitionOffsetState", "member" : "kafka4m.consumer.AckableRecord.offset", "link" : "kafka4m\/consumer\/AckableRecord.html#offset:kafka4m.consumer.PartitionOffsetState", "kind" : "val"}, {"label" : "consumer", "tail" : ": RichKafkaConsumer[_, _]", "member" : "kafka4m.consumer.AckableRecord.consumer", "link" : "kafka4m\/consumer\/AckableRecord.html#consumer:kafka4m.consumer.RichKafkaConsumer[_,_]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/consumer\/AckableRecord.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/AckableRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/AckableRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/AckableRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/AckableRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/AckableRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/AckableRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/AckableRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/AckableRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/AckableRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/AckableRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/AckableRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/AckableRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/AckableRecord.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/AckableRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/AckableRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/AckableRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/AckableRecord.html", "kind" : "case class"}, {"name" : "kafka4m.consumer.HasRecord", "object" : "kafka4m\/consumer\/HasRecord$.html", "members_object" : [{"label" : "fromTuple2", "tail" : "(): HasRecord[(T, ConsumerRecord[K, V])] { def recordFor(value: (T, org.apache.kafka.clients.consumer.ConsumerRecord[K,V])): org.apache.kafka.clients.consumer.ConsumerRecord[K,V] }", "member" : "kafka4m.consumer.HasRecord.fromTuple2", "link" : "kafka4m\/consumer\/HasRecord$.html#fromTuple2[K,V,T]:kafka4m.consumer.HasRecord[(T,org.apache.kafka.clients.consumer.ConsumerRecord[K,V])]{defrecordFor(value:(T,org.apache.kafka.clients.consumer.ConsumerRecord[K,V])):org.apache.kafka.clients.consumer.ConsumerRecord[K,V]}", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(value: HasRecord[A]): HasRecord[A]", "member" : "kafka4m.consumer.HasRecord.apply", "link" : "kafka4m\/consumer\/HasRecord$.html#apply[A](implicitvalue:kafka4m.consumer.HasRecord[A]):kafka4m.consumer.HasRecord[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/HasRecord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/HasRecord$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/HasRecord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/HasRecord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/HasRecord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/HasRecord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/HasRecord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/HasRecord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/HasRecord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/HasRecord$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/HasRecord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/HasRecord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/HasRecord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/HasRecord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/HasRecord$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/HasRecord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/HasRecord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/HasRecord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/HasRecord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/consumer\/HasRecord.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/HasRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/HasRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/HasRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/HasRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/HasRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/HasRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/HasRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/HasRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/HasRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/HasRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/HasRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/HasRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/HasRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/HasRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/HasRecord.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/HasRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/HasRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/HasRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/HasRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "recordFor", "tail" : "(value: A): ConsumerRecord[_, _]", "member" : "kafka4m.consumer.HasRecord.recordFor", "link" : "kafka4m\/consumer\/HasRecord.html#recordFor(value:A):org.apache.kafka.clients.consumer.ConsumerRecord[_,_]", "kind" : "abstract def"}], "shortDescription" : "Represents something from which we can obtain a ConsumerRecord"}, {"name" : "kafka4m.consumer.PartitionOffsetState", "shortDescription" : "an immutable means of tracking which offset\/partitions have been observed", "object" : "kafka4m\/consumer\/PartitionOffsetState$.html", "members_object" : [{"label" : "forTopic", "tail" : "(topic: String)(entries: (Int, Long)*): PartitionOffsetState", "member" : "kafka4m.consumer.PartitionOffsetState.forTopic", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#forTopic(topic:String)(entries:(Int,Long)*):kafka4m.consumer.PartitionOffsetState", "kind" : "def"}, {"label" : "apply", "tail" : "(entries: (String, Map[Int, Long])*): PartitionOffsetState", "member" : "kafka4m.consumer.PartitionOffsetState.apply", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#apply(entries:(String,Map[Int,Long])*):kafka4m.consumer.PartitionOffsetState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/PartitionOffsetState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "update", "tail" : "(topic: String, partition: Int, offset: Long): PartitionOffsetState", "member" : "kafka4m.consumer.PartitionOffsetState.update", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#update(topic:String,partition:Int,offset:Long):kafka4m.consumer.PartitionOffsetState", "kind" : "def"}, {"label" : "update", "tail" : "(record: ConsumerRecord[_, _]): PartitionOffsetState", "member" : "kafka4m.consumer.PartitionOffsetState.update", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#update(record:org.apache.kafka.clients.consumer.ConsumerRecord[_,_]):kafka4m.consumer.PartitionOffsetState", "kind" : "def"}, {"label" : "asTopicPartitionMap", "tail" : "(): Map[TopicPartition, OffsetAndMetadata]", "member" : "kafka4m.consumer.PartitionOffsetState.asTopicPartitionMap", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#asTopicPartitionMap:Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]", "kind" : "def"}, {"label" : "asTopicPartitionMapJava", "tail" : "(): Map[TopicPartition, OffsetAndMetadata]", "member" : "kafka4m.consumer.PartitionOffsetState.asTopicPartitionMapJava", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#asTopicPartitionMapJava:java.util.Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "kafka4m.consumer.PartitionOffsetState.nonEmpty", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "incOffsets", "tail" : "(): PartitionOffsetState", "member" : "kafka4m.consumer.PartitionOffsetState.incOffsets", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#incOffsets():kafka4m.consumer.PartitionOffsetState", "kind" : "def"}, {"member" : "kafka4m.consumer.PartitionOffsetState#<init>", "error" : "unsupported entity"}, {"label" : "offsetByPartitionByTopic", "tail" : ": Map[String, Map[Int, Long]]", "member" : "kafka4m.consumer.PartitionOffsetState.offsetByPartitionByTopic", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#offsetByPartitionByTopic:Map[String,Map[Int,Long]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/PartitionOffsetState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/PartitionOffsetState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/PartitionOffsetState.html", "kind" : "case class"}, {"name" : "kafka4m.consumer.RebalanceListener", "shortDescription" : "", "object" : "kafka4m\/consumer\/RebalanceListener$.html", "members_object" : [{"label" : "onPartitionsAssigned", "tail" : "(partitions: Collection[TopicPartition]): Unit", "member" : "kafka4m.consumer.RebalanceListener.onPartitionsAssigned", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsAssigned(partitions:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "onPartitionsRevoked", "tail" : "(partitions: Collection[TopicPartition]): Unit", "member" : "kafka4m.consumer.RebalanceListener.onPartitionsRevoked", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsRevoked(partitions:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/consumer\/RebalanceListener$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "kafka4m\/consumer\/RebalanceListener$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RebalanceListener$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "onPartitionsLost", "tail" : "(arg0: Collection[TopicPartition]): Unit", "member" : "org.apache.kafka.clients.consumer.ConsumerRebalanceListener.onPartitionsLost", "link" : "kafka4m\/consumer\/RebalanceListener$.html#onPartitionsLost(x$1:java.util.Collection[org.apache.kafka.common.TopicPartition]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RebalanceListener$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RebalanceListener$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RebalanceListener$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RebalanceListener$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RebalanceListener$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RebalanceListener$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RebalanceListener$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RebalanceListener$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RebalanceListener$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RebalanceListener$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RebalanceListener$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RebalanceListener$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RebalanceListener$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RebalanceListener$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RebalanceListener$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.consumer.RichKafkaConsumer", "shortDescription" : "A means of driving a kafka-stream using the consumer (not kafka streaming) API", "object" : "kafka4m\/consumer\/RichKafkaConsumer$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.consumer.RichKafkaConsumer.close", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#close():Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.isClosed", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#isClosed():Boolean", "kind" : "def"}, {"label" : "status", "tail" : "(verbose: Boolean): String", "member" : "kafka4m.consumer.RichKafkaConsumer.status", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#status(verbose:Boolean):String", "kind" : "def"}, {"label" : "assignmentPartitions", "tail" : "(): List[Int]", "member" : "kafka4m.consumer.RichKafkaConsumer.assignmentPartitions", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#assignmentPartitions:List[Int]", "kind" : "def"}, {"label" : "poll", "tail" : "(timeout: Duration): Iterable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.poll", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#poll(timeout:java.time.Duration):Iterable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "committed", "tail" : "(partition: Int): Map[String, OffsetAndMetadata]", "member" : "kafka4m.consumer.RichKafkaConsumer.committed", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#committed(partition:Int):Map[String,org.apache.kafka.clients.consumer.OffsetAndMetadata]", "kind" : "def"}, {"label" : "positionsFor", "tail" : "(partition: Int): Map[String, Long]", "member" : "kafka4m.consumer.RichKafkaConsumer.positionsFor", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#positionsFor(partition:Int):scala.collection.immutable.Map[String,Long]", "kind" : "def"}, {"label" : "seekToBeginning", "tail" : "(partition: Int): Boolean", "member" : "kafka4m.consumer.RichKafkaConsumer.seekToBeginning", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#seekToBeginning(partition:Int):Boolean", "kind" : "def"}, {"label" : "commitAsync", "tail" : "(state: PartitionOffsetState): Future[Map[TopicPartition, OffsetAndMetadata]]", "member" : "kafka4m.consumer.RichKafkaConsumer.commitAsync", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#commitAsync(state:kafka4m.consumer.PartitionOffsetState):scala.concurrent.Future[Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]]", "kind" : "def"}, {"label" : "asObservable", "tail" : "(closeOnComplete: Boolean)(scheduler: Scheduler): Observable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.asObservable", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asObservable(closeOnComplete:Boolean)(implicitscheduler:monix.execution.Scheduler):monix.reactive.Observable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "asObservableCommitEveryObservable", "tail" : "(closeOnComplete: Boolean, numberOfMessagesToReceiveBetweenOffsetCommits: Int)(scheduler: Scheduler): Observable[(PartitionOffsetState, Option[Future[Unit]], ConsumerRecord[K, V])]", "member" : "kafka4m.consumer.RichKafkaConsumer.asObservableCommitEveryObservable", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asObservableCommitEveryObservable(closeOnComplete:Boolean,numberOfMessagesToReceiveBetweenOffsetCommits:Int)(implicitscheduler:monix.execution.Scheduler):monix.reactive.Observable[(kafka4m.consumer.PartitionOffsetState,Option[scala.concurrent.Future[Unit]],org.apache.kafka.clients.consumer.ConsumerRecord[K,V])]", "kind" : "def"}, {"label" : "asObservableCommitEvery", "tail" : "(closeOnComplete: Boolean, numberOfMessagesToReceiveBetweenOffsetCommits: Int)(scheduler: Scheduler): Observable[ConsumerRecord[K, V]]", "member" : "kafka4m.consumer.RichKafkaConsumer.asObservableCommitEvery", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asObservableCommitEvery(closeOnComplete:Boolean,numberOfMessagesToReceiveBetweenOffsetCommits:Int)(implicitscheduler:monix.execution.Scheduler):monix.reactive.Observable[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "def"}, {"label" : "partitions", "tail" : "(): List[PartitionInfo]", "member" : "kafka4m.consumer.RichKafkaConsumer.partitions", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#partitions:List[org.apache.kafka.common.PartitionInfo]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(topic: String, listener: ConsumerRebalanceListener): Unit", "member" : "kafka4m.consumer.RichKafkaConsumer.subscribe", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#subscribe(topic:String,listener:org.apache.kafka.clients.consumer.ConsumerRebalanceListener):Unit", "kind" : "def"}, {"label" : "partitionsByTopic", "tail" : "(): Map[Key, List[PartitionInfo]]", "member" : "kafka4m.consumer.RichKafkaConsumer.partitionsByTopic", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#partitionsByTopic():Map[kafka4m.Key,List[org.apache.kafka.common.PartitionInfo]]", "kind" : "def"}, {"member" : "kafka4m.consumer.RichKafkaConsumer#<init>", "error" : "unsupported entity"}, {"label" : "defaultPollTimeout", "tail" : ": Duration", "member" : "kafka4m.consumer.RichKafkaConsumer.defaultPollTimeout", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#defaultPollTimeout:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "topics", "tail" : ": Set[String]", "member" : "kafka4m.consumer.RichKafkaConsumer.topics", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#topics:Set[String]", "kind" : "val"}, {"label" : "consumer", "tail" : ": KafkaConsumer[K, V]", "member" : "kafka4m.consumer.RichKafkaConsumer.consumer", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#consumer:org.apache.kafka.clients.consumer.KafkaConsumer[K,V]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config, keyDeserializer: Deserializer[K], valueDeserializer: Deserializer[V])(ioSched: Scheduler): RichKafkaConsumer[K, V]", "member" : "kafka4m.consumer.RichKafkaConsumer.apply", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#apply[K,V](rootConfig:com.typesafe.config.Config,keyDeserializer:org.apache.kafka.common.serialization.Deserializer[K],valueDeserializer:org.apache.kafka.common.serialization.Deserializer[V])(implicitioSched:monix.execution.Scheduler):kafka4m.consumer.RichKafkaConsumer[K,V]", "kind" : "def"}, {"label" : "byteArrayValues", "tail" : "(rootConfig: Config)(ioSched: Scheduler): RichKafkaConsumer[String, Array[Byte]]", "member" : "kafka4m.consumer.RichKafkaConsumer.byteArrayValues", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#byteArrayValues(rootConfig:com.typesafe.config.Config)(implicitioSched:monix.execution.Scheduler):kafka4m.consumer.RichKafkaConsumer[String,Array[Byte]]", "kind" : "def"}, {"label" : "asJavaDuration", "tail" : "(d: Duration): Duration", "member" : "kafka4m.consumer.RichKafkaConsumer.asJavaDuration", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asJavaDuration(d:scala.concurrent.duration.Duration):java.time.Duration", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/RichKafkaConsumer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/consumer\/RichKafkaConsumer.html", "kind" : "class"}, {"name" : "kafka4m.consumer.TopicStatus", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "kafka4m.consumer.TopicStatus.toString", "link" : "kafka4m\/consumer\/TopicStatus.html#toString():String", "kind" : "def"}, {"member" : "kafka4m.consumer.TopicStatus#<init>", "error" : "unsupported entity"}, {"label" : "partitions", "tail" : ": Seq[PartitionInfo]", "member" : "kafka4m.consumer.TopicStatus.partitions", "link" : "kafka4m\/consumer\/TopicStatus.html#partitions:Seq[org.apache.kafka.common.PartitionInfo]", "kind" : "val"}, {"label" : "topic", "tail" : ": String", "member" : "kafka4m.consumer.TopicStatus.topic", "link" : "kafka4m\/consumer\/TopicStatus.html#topic:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/consumer\/TopicStatus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/consumer\/TopicStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/consumer\/TopicStatus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/consumer\/TopicStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/consumer\/TopicStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/consumer\/TopicStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/consumer\/TopicStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/consumer\/TopicStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/consumer\/TopicStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/consumer\/TopicStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/consumer\/TopicStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/consumer\/TopicStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/consumer\/TopicStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/consumer\/TopicStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/consumer\/TopicStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/consumer\/TopicStatus.html", "kind" : "case class"}], "kafka4m.io" : [{"name" : "kafka4m.io.Appender", "trait" : "kafka4m\/io\/Appender.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/Appender.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/Appender.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/Appender.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/Appender.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/Appender.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/Appender.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/Appender.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Appender.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Appender.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Appender.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/Appender.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/Appender.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/Appender.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/Appender.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/Appender.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/Appender.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/Appender.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/Appender.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/Appender.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "append", "tail" : "(value: A): Unit", "member" : "kafka4m.io.Appender.append", "link" : "kafka4m\/io\/Appender.html#append(value:A):Unit", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.lang.AutoCloseable.close", "link" : "kafka4m\/io\/Appender.html#close():Unit", "kind" : "abstract def"}], "shortDescription" : "Represents a sink for writing values to some persistent source"}, {"name" : "kafka4m.io.Base64Writer", "shortDescription" : "An ETL configuration which will take Kafka records and write them to some directory", "object" : "kafka4m\/io\/Base64Writer$.html", "members_object" : [{"label" : "forConfig", "tail" : "(fromKafkaConfig: Config): Base64Writer[ConsumerRecord[Key, Bytes]]", "member" : "kafka4m.io.Base64Writer.forConfig", "link" : "kafka4m\/io\/Base64Writer$.html#forConfig(fromKafkaConfig:com.typesafe.config.Config):kafka4m.io.Base64Writer[org.apache.kafka.clients.consumer.ConsumerRecord[kafka4m.Key,kafka4m.Bytes]]", "kind" : "def"}, {"label" : "apply", "tail" : "(rootConfig: Config): Base64Writer[ConsumerRecord[Key, Bytes]]", "member" : "kafka4m.io.Base64Writer.apply", "link" : "kafka4m\/io\/Base64Writer$.html#apply(rootConfig:com.typesafe.config.Config):kafka4m.io.Base64Writer[org.apache.kafka.clients.consumer.ConsumerRecord[kafka4m.Key,kafka4m.Bytes]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/io\/Base64Writer$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/Base64Writer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/Base64Writer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/Base64Writer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/Base64Writer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/Base64Writer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/Base64Writer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/Base64Writer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/Base64Writer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/Base64Writer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/Base64Writer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/Base64Writer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/Base64Writer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/Base64Writer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/Base64Writer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/Base64Writer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/Base64Writer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "write", "tail" : "(events: Observable[PartitionEvent[A, TimeBucket]]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.Base64Writer.write", "link" : "kafka4m\/io\/Base64Writer.html#write(events:monix.reactive.Observable[kafka4m.partitions.PartitionEvent[A,kafka4m.partitions.TimeBucket]]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "partition", "tail" : "(input: Observable[A]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.Base64Writer.partition", "link" : "kafka4m\/io\/Base64Writer.html#partition(input:monix.reactive.Observable[A]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "asEvents", "tail" : "(input: Observable[A]): Observable[PartitionEvent[A, TimeBucket]]", "member" : "kafka4m.io.Base64Writer.asEvents", "link" : "kafka4m\/io\/Base64Writer.html#asEvents(input:monix.reactive.Observable[A]):monix.reactive.Observable[kafka4m.partitions.PartitionEvent[A,kafka4m.partitions.TimeBucket]]", "kind" : "def"}, {"member" : "kafka4m.io.Base64Writer#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Option[Long]", "member" : "kafka4m.io.Base64Writer.limit", "link" : "kafka4m\/io\/Base64Writer.html#limit:Option[Long]", "kind" : "val"}, {"label" : "flushEvery", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.flushEvery", "link" : "kafka4m\/io\/Base64Writer.html#flushEvery:Int", "kind" : "val"}, {"label" : "timeBucketMinutes", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.timeBucketMinutes", "link" : "kafka4m\/io\/Base64Writer.html#timeBucketMinutes:Int", "kind" : "val"}, {"label" : "numberOfAppendsBeforeWriterFlush", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.numberOfAppendsBeforeWriterFlush", "link" : "kafka4m\/io\/Base64Writer.html#numberOfAppendsBeforeWriterFlush:Int", "kind" : "val"}, {"label" : "recordsReceivedBeforeClosingBucket", "tail" : ": Int", "member" : "kafka4m.io.Base64Writer.recordsReceivedBeforeClosingBucket", "link" : "kafka4m\/io\/Base64Writer.html#recordsReceivedBeforeClosingBucket:Int", "kind" : "val"}, {"label" : "dir", "tail" : ": Path", "member" : "kafka4m.io.Base64Writer.dir", "link" : "kafka4m\/io\/Base64Writer.html#dir:java.nio.file.Path", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/io\/Base64Writer.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/Base64Writer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/Base64Writer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/Base64Writer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/Base64Writer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/Base64Writer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/Base64Writer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/Base64Writer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/Base64Writer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/Base64Writer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/Base64Writer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/Base64Writer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/Base64Writer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/Base64Writer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/Base64Writer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/io\/Base64Writer.html", "kind" : "case class"}, {"name" : "kafka4m.io.FileSink", "shortDescription" : "Means to write data to zips", "object" : "kafka4m\/io\/FileSink$.html", "members_object" : [{"label" : "zipped", "tail" : "(zipFile: Path, flushEvery: Int, zipLevel: Int): ZipAppenderObserver[(Key, Bytes)]", "member" : "kafka4m.io.FileSink.zipped", "link" : "kafka4m\/io\/FileSink$.html#zipped(zipFile:java.nio.file.Path,flushEvery:Int,zipLevel:Int):kafka4m.io.ZipAppenderObserver[(kafka4m.Key,kafka4m.Bytes)]", "kind" : "def"}, {"label" : "text", "tail" : "(file: Path, flushEvery: Int)(arg0: Show[A]): TextAppenderObserver[A]", "member" : "kafka4m.io.FileSink.text", "link" : "kafka4m\/io\/FileSink$.html#text[A](file:java.nio.file.Path,flushEvery:Int)(implicitevidence$1:cats.Show[A]):kafka4m.io.TextAppenderObserver[A]", "kind" : "def"}, {"label" : "base64", "tail" : "(file: Path, flushEvery: Int): TextAppenderObserver[ConsumerRecord[Key, Bytes]]", "member" : "kafka4m.io.FileSink.base64", "link" : "kafka4m\/io\/FileSink$.html#base64(file:java.nio.file.Path,flushEvery:Int):kafka4m.io.TextAppenderObserver[org.apache.kafka.clients.consumer.ConsumerRecord[kafka4m.Key,kafka4m.Bytes]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/FileSink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/FileSink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/FileSink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/FileSink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/FileSink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/FileSink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/FileSink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSink$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/FileSink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/FileSink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/FileSink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/FileSink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/FileSink$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/FileSink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/FileSink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/FileSink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/FileSink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.io.FileSource", "shortDescription" : "A means to get a stream of data from a directory, if only to make kafka4m useful out-of-the-box.", "object" : "kafka4m\/io\/FileSource$.html", "members_object" : [{"label" : "listChildren", "tail" : "(dir: Path): Iterator[Path]", "member" : "kafka4m.io.FileSource.listChildren", "link" : "kafka4m\/io\/FileSource$.html#listChildren(dir:java.nio.file.Path):Iterator[java.nio.file.Path]", "kind" : "def"}, {"label" : "keysAndData", "tail" : "(conf: EtlConfig): Observable[(String, Array[Byte])]", "member" : "kafka4m.io.FileSource.keysAndData", "link" : "kafka4m\/io\/FileSource$.html#keysAndData(conf:kafka4m.io.FileSource.EtlConfig):monix.reactive.Observable[(String,Array[Byte])]", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config): Observable[(String, Array[Byte])]", "member" : "kafka4m.io.FileSource.apply", "link" : "kafka4m\/io\/FileSource$.html#apply(config:com.typesafe.config.Config):monix.reactive.Observable[(String,Array[Byte])]", "kind" : "def"}, {"label" : "EtlConfig", "tail" : "", "member" : "kafka4m.io.FileSource.EtlConfig", "link" : "kafka4m\/io\/FileSource$.html#EtlConfig", "kind" : "object"}, {"label" : "EtlConfig", "tail" : "", "member" : "kafka4m.io.FileSource.EtlConfig", "link" : "kafka4m\/io\/FileSource$.html#EtlConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/FileSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/FileSource$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/FileSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/FileSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/FileSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/FileSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/FileSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/FileSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/FileSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/FileSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/FileSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/FileSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/FileSource$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/FileSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/FileSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/FileSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/FileSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.io.TextAppenderObserver", "shortDescription" : "A namespace which holds a 'fromEvents' as a means to transform append events into time-bucketed files", "object" : "kafka4m\/io\/TextAppenderObserver$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.io.TextAppenderObserver.close", "link" : "kafka4m\/io\/TextAppenderObserver.html#close():Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "kafka4m.io.TextAppenderObserver.size", "link" : "kafka4m\/io\/TextAppenderObserver.html#size():Int", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "kafka4m.io.TextAppenderObserver.isClosed", "link" : "kafka4m\/io\/TextAppenderObserver.html#isClosed():Boolean", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "kafka4m.io.TextAppenderObserver.onComplete", "link" : "kafka4m\/io\/TextAppenderObserver.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "kafka4m.io.TextAppenderObserver.onError", "link" : "kafka4m\/io\/TextAppenderObserver.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: A): Future[Ack]", "member" : "kafka4m.io.TextAppenderObserver.onNext", "link" : "kafka4m\/io\/TextAppenderObserver.html#onNext(elem:A):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "kafka4m.io.TextAppenderObserver.flush", "link" : "kafka4m\/io\/TextAppenderObserver.html#flush():Unit", "kind" : "def"}, {"label" : "append", "tail" : "(data: A): Unit", "member" : "kafka4m.io.TextAppenderObserver.append", "link" : "kafka4m\/io\/TextAppenderObserver.html#append(data:A):Unit", "kind" : "def"}, {"member" : "kafka4m.io.TextAppenderObserver#<init>", "error" : "unsupported entity"}, {"label" : "file", "tail" : ": Path", "member" : "kafka4m.io.TextAppenderObserver.file", "link" : "kafka4m\/io\/TextAppenderObserver.html#file:java.nio.file.Path", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/io\/TextAppenderObserver.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/TextAppenderObserver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/TextAppenderObserver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/TextAppenderObserver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/TextAppenderObserver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/TextAppenderObserver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/TextAppenderObserver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/TextAppenderObserver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/TextAppenderObserver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/TextAppenderObserver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/TextAppenderObserver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/TextAppenderObserver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/TextAppenderObserver.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/TextAppenderObserver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/TextAppenderObserver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromEvents", "tail" : "(dir: Path, flushEvery: Int, bucketRangeInMinutes: Int, appendEvents: Observable[PartitionEvent[A, TimeBucket]])(arg0: HasTimestamp[A], arg1: Show[A]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.TextAppenderObserver.fromEvents", "link" : "kafka4m\/io\/TextAppenderObserver$.html#fromEvents[A](dir:java.nio.file.Path,flushEvery:Int,bucketRangeInMinutes:Int,appendEvents:monix.reactive.Observable[kafka4m.partitions.PartitionEvent[A,kafka4m.partitions.TimeBucket]])(implicitevidence$1:kafka4m.partitions.HasTimestamp[A],implicitevidence$2:cats.Show[A]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "ShowRecord", "tail" : "", "member" : "kafka4m.io.TextAppenderObserver.ShowRecord", "link" : "kafka4m\/io\/TextAppenderObserver$.html#ShowRecord", "kind" : "implicit object"}, {"label" : "Base64Line", "tail" : "", "member" : "kafka4m.io.TextAppenderObserver.Base64Line", "link" : "kafka4m\/io\/TextAppenderObserver$.html#Base64Line", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/TextAppenderObserver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/TextAppenderObserver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/TextAppenderObserver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/TextAppenderObserver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/TextAppenderObserver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/TextAppenderObserver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/TextAppenderObserver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/TextAppenderObserver$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/TextAppenderObserver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/TextAppenderObserver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/TextAppenderObserver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/TextAppenderObserver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/TextAppenderObserver$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/TextAppenderObserver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/TextAppenderObserver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/TextAppenderObserver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/io\/TextAppenderObserver.html", "kind" : "object"}, {"name" : "kafka4m.io.ZipAppenderObserver", "shortDescription" : "", "object" : "kafka4m\/io\/ZipAppenderObserver$.html", "members_class" : [{"label" : "append", "tail" : "(value: A): Unit", "member" : "kafka4m.io.ZipAppenderObserver.append", "link" : "kafka4m\/io\/ZipAppenderObserver.html#append(value:A):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.io.ZipAppenderObserver.close", "link" : "kafka4m\/io\/ZipAppenderObserver.html#close():Unit", "kind" : "def"}, {"label" : "onComplete", "tail" : "(): Unit", "member" : "kafka4m.io.ZipAppenderObserver.onComplete", "link" : "kafka4m\/io\/ZipAppenderObserver.html#onComplete():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(ex: Throwable): Unit", "member" : "kafka4m.io.ZipAppenderObserver.onError", "link" : "kafka4m\/io\/ZipAppenderObserver.html#onError(ex:Throwable):Unit", "kind" : "def"}, {"label" : "onNext", "tail" : "(elem: A): Future[Ack]", "member" : "kafka4m.io.ZipAppenderObserver.onNext", "link" : "kafka4m\/io\/ZipAppenderObserver.html#onNext(elem:A):scala.concurrent.Future[monix.execution.Ack]", "kind" : "def"}, {"label" : "flushCount", "tail" : ": Int", "member" : "kafka4m.io.ZipAppenderObserver.flushCount", "link" : "kafka4m\/io\/ZipAppenderObserver.html#flushCount:Int", "kind" : "var"}, {"label" : "zipOut", "tail" : ": ZipOutputStream", "member" : "kafka4m.io.ZipAppenderObserver.zipOut", "link" : "kafka4m\/io\/ZipAppenderObserver.html#zipOut:java.util.zip.ZipOutputStream", "kind" : "val"}, {"member" : "kafka4m.io.ZipAppenderObserver#<init>", "error" : "unsupported entity"}, {"label" : "zipFile", "tail" : ": Path", "member" : "kafka4m.io.ZipAppenderObserver.zipFile", "link" : "kafka4m\/io\/ZipAppenderObserver.html#zipFile:java.nio.file.Path", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/io\/ZipAppenderObserver.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/ZipAppenderObserver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/ZipAppenderObserver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/ZipAppenderObserver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/ZipAppenderObserver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/ZipAppenderObserver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/ZipAppenderObserver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/ZipAppenderObserver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/ZipAppenderObserver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/ZipAppenderObserver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/ZipAppenderObserver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/ZipAppenderObserver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/ZipAppenderObserver.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/ZipAppenderObserver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/ZipAppenderObserver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/ZipAppenderObserver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/ZipAppenderObserver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromEvents", "tail" : "(dir: Path, flushEvery: Int, bucketRangeInMinutes: Int, appendEvents: Observable[PartitionEvent[A, TimeBucket]], zipLevel: Int)(arg0: HasTimestamp[A], arg1: ToEntry[A]): Observable[(TimeBucket, Path)]", "member" : "kafka4m.io.ZipAppenderObserver.fromEvents", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#fromEvents[A](dir:java.nio.file.Path,flushEvery:Int,bucketRangeInMinutes:Int,appendEvents:monix.reactive.Observable[kafka4m.partitions.PartitionEvent[A,kafka4m.partitions.TimeBucket]],zipLevel:Int)(implicitevidence$1:kafka4m.partitions.HasTimestamp[A],implicitevidence$2:kafka4m.io.ZipAppenderObserver.ToEntry[A]):monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)]", "kind" : "def"}, {"label" : "ToEntry", "tail" : "", "member" : "kafka4m.io.ZipAppenderObserver.ToEntry", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#ToEntry", "kind" : "object"}, {"label" : "ToEntry", "tail" : "", "member" : "kafka4m.io.ZipAppenderObserver.ToEntry", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#ToEntry[A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/io\/ZipAppenderObserver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/io\/ZipAppenderObserver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/io\/ZipAppenderObserver.html", "kind" : "object"}], "kafka4m.util" : [{"name" : "kafka4m.util.LatencySnapshot", "shortDescription" : "", "members_case class" : [{"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "kafka4m.util.LatencySnapshot.nonEmpty", "link" : "kafka4m\/util\/LatencySnapshot.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "kafka4m.util.LatencySnapshot.toString", "link" : "kafka4m\/util\/LatencySnapshot.html#toString():String", "kind" : "def"}, {"member" : "kafka4m.util.LatencySnapshot#<init>", "error" : "unsupported entity"}, {"label" : "total", "tail" : ": Long", "member" : "kafka4m.util.LatencySnapshot.total", "link" : "kafka4m\/util\/LatencySnapshot.html#total:Long", "kind" : "val"}, {"label" : "perSecond", "tail" : ": Int", "member" : "kafka4m.util.LatencySnapshot.perSecond", "link" : "kafka4m\/util\/LatencySnapshot.html#perSecond:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/util\/LatencySnapshot.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/LatencySnapshot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/LatencySnapshot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/LatencySnapshot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/LatencySnapshot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/LatencySnapshot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/LatencySnapshot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/LatencySnapshot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/LatencySnapshot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/LatencySnapshot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/LatencySnapshot.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/LatencySnapshot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/LatencySnapshot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/LatencySnapshot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/LatencySnapshot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/LatencySnapshot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/LatencySnapshot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/util\/LatencySnapshot.html", "kind" : "case class"}, {"name" : "kafka4m.util.Metrics", "shortDescription" : "Represents a simple counter task", "members_class" : [{"label" : "flush", "tail" : "(): LatencySnapshot", "member" : "kafka4m.util.Metrics.flush", "link" : "kafka4m\/util\/Metrics.html#flush():kafka4m.util.LatencySnapshot", "kind" : "def"}, {"label" : "incThroughput", "tail" : ": Task[Unit]", "member" : "kafka4m.util.Metrics.incThroughput", "link" : "kafka4m\/util\/Metrics.html#incThroughput:monix.eval.Task[Unit]", "kind" : "val"}, {"member" : "kafka4m.util.Metrics#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Metrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Metrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Metrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Metrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Metrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Metrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Metrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Metrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Metrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Metrics.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Metrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Metrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Metrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Metrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Metrics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Metrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Metrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Metrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Metrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/util\/Metrics.html", "kind" : "class"}, {"name" : "kafka4m.util.Props", "shortDescription" : "", "object" : "kafka4m\/util\/Props$.html", "members_object" : [{"label" : "propertiesForConfig", "tail" : "(config: Config): Properties", "member" : "kafka4m.util.Props.propertiesForConfig", "link" : "kafka4m\/util\/Props$.html#propertiesForConfig(config:com.typesafe.config.Config):java.util.Properties", "kind" : "def"}, {"label" : "format", "tail" : "(all: Properties): String", "member" : "kafka4m.util.Props.format", "link" : "kafka4m\/util\/Props$.html#format(all:java.util.Properties):String", "kind" : "def"}, {"label" : "replaceUniqueId", "tail" : "(str: String, uid: String): String", "member" : "kafka4m.util.Props.replaceUniqueId", "link" : "kafka4m\/util\/Props$.html#replaceUniqueId(str:String,uid:String):String", "kind" : "def"}, {"label" : "topics", "tail" : "(rootConfig: Config, subconfName: String, orElse: String*): Set[String]", "member" : "kafka4m.util.Props.topics", "link" : "kafka4m\/util\/Props$.html#topics(rootConfig:com.typesafe.config.Config,subconfName:String,orElse:String*):Set[String]", "kind" : "def"}, {"label" : "topic", "tail" : "(rootConfig: Config, subconfName: String, orElse: String*): String", "member" : "kafka4m.util.Props.topic", "link" : "kafka4m\/util\/Props$.html#topic(rootConfig:com.typesafe.config.Config,subconfName:String,orElse:String*):String", "kind" : "def"}, {"label" : "Bytes", "tail" : "", "member" : "kafka4m.util.Props.Bytes", "link" : "kafka4m\/util\/Props$.html#Bytes=Array[Byte]", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "kafka4m\/util\/Props$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Props$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Props$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Props$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Props$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Props$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Props$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Props$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Props$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Props$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Props$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Props$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Props$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Props$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Props$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Props$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Props$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Props$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Schedulers", "shortDescription" : "", "object" : "kafka4m\/util\/Schedulers$.html", "members_object" : [{"label" : "compute", "tail" : "(name: String, daemonic: Boolean, executionModel: ExecutionModel): SchedulerService", "member" : "kafka4m.util.Schedulers.compute", "link" : "kafka4m\/util\/Schedulers$.html#compute(name:String,daemonic:Boolean,executionModel:monix.execution.ExecutionModel):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "io", "tail" : "(name: String, daemonic: Boolean): SchedulerService", "member" : "kafka4m.util.Schedulers.io", "link" : "kafka4m\/util\/Schedulers$.html#io(name:String,daemonic:Boolean):monix.execution.schedulers.SchedulerService", "kind" : "def"}, {"label" : "LoggingReporter", "tail" : "", "member" : "kafka4m.util.Schedulers.LoggingReporter", "link" : "kafka4m\/util\/Schedulers$.html#LoggingReporter", "kind" : "object"}, {"label" : "using", "tail" : "(sched: SchedulerService)(f: (Scheduler) => A): A", "member" : "kafka4m.util.Schedulers.using", "link" : "kafka4m\/util\/Schedulers$.html#using[A](sched:monix.execution.schedulers.SchedulerService)(f:monix.execution.Scheduler=>A):A", "kind" : "def"}, {"label" : "using", "tail" : "(f: (Scheduler) => A): A", "member" : "kafka4m.util.Schedulers.using", "link" : "kafka4m\/util\/Schedulers$.html#using[A](f:monix.execution.Scheduler=>A):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Schedulers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Schedulers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Schedulers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Schedulers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Schedulers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Schedulers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Schedulers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Schedulers$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Schedulers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Schedulers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Schedulers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Schedulers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Schedulers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Schedulers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Schedulers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Schedulers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Schedulers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "kafka4m.util.Stats", "shortDescription" : "A place where we can write config stats for app support.", "object" : "kafka4m\/util\/Stats$.html", "members_class" : [{"label" : "flush", "tail" : "(): Unit", "member" : "kafka4m.util.Stats.flush", "link" : "kafka4m\/util\/Stats.html#flush():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(scheduler: Scheduler): Cancelable", "member" : "kafka4m.util.Stats.start", "link" : "kafka4m\/util\/Stats.html#start(scheduler:monix.execution.Scheduler):monix.execution.Cancelable", "kind" : "def"}, {"label" : "onReadFromKafka", "tail" : "(record: ConsumerRecord[_, _]): Task[Unit]", "member" : "kafka4m.util.Stats.onReadFromKafka", "link" : "kafka4m\/util\/Stats.html#onReadFromKafka(record:org.apache.kafka.clients.consumer.ConsumerRecord[_,_]):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "onWriteToKafka", "tail" : ": Task[Unit]", "member" : "kafka4m.util.Stats.onWriteToKafka", "link" : "kafka4m\/util\/Stats.html#onWriteToKafka:monix.eval.Task[Unit]", "kind" : "val"}, {"label" : "flushHtml", "tail" : "(report: => String): Boolean", "member" : "kafka4m.util.Stats.flushHtml", "link" : "kafka4m\/util\/Stats.html#flushHtml(report:=>String):Boolean", "kind" : "def"}, {"label" : "enabled", "tail" : ": Boolean", "member" : "kafka4m.util.Stats.enabled", "link" : "kafka4m\/util\/Stats.html#enabled:Boolean", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/util\/Stats.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Stats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Stats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Stats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Stats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Stats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Stats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Stats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Stats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Stats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Stats.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Stats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Stats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Stats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Stats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Stats.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Stats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Stats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Stats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Stats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "KafkaReadStats", "tail" : "", "member" : "kafka4m.util.Stats.KafkaReadStats", "link" : "kafka4m\/util\/Stats$.html#KafkaReadStatsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "PartitionStats", "tail" : "", "member" : "kafka4m.util.Stats.PartitionStats", "link" : "kafka4m\/util\/Stats$.html#PartitionStatsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "LatencyStats", "tail" : "", "member" : "kafka4m.util.Stats.LatencyStats", "link" : "kafka4m\/util\/Stats$.html#LatencyStats", "kind" : "object"}, {"label" : "LatencyStats", "tail" : "", "member" : "kafka4m.util.Stats.LatencyStats", "link" : "kafka4m\/util\/Stats$.html#LatencyStatsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "LatencyPoint", "tail" : "", "member" : "kafka4m.util.Stats.LatencyPoint", "link" : "kafka4m\/util\/Stats$.html#LatencyPointextendsProductwithSerializable", "kind" : "case class"}, {"label" : "apply", "tail" : "(config: Config): Stats", "member" : "kafka4m.util.Stats.apply", "link" : "kafka4m\/util\/Stats$.html#apply(config:com.typesafe.config.Config):kafka4m.util.Stats", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Stats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Stats$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Stats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Stats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Stats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Stats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Stats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Stats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Stats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Stats$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Stats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Stats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Stats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Stats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Stats$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Stats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Stats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Stats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Stats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/util\/Stats.html", "kind" : "class"}, {"name" : "kafka4m.util.Using", "shortDescription" : "come on scala 2.13!", "object" : "kafka4m\/util\/Using$.html", "members_object" : [{"label" : "apply", "tail" : "(resource: A)(thunk: (A) => T): T", "member" : "kafka4m.util.Using.apply", "link" : "kafka4m\/util\/Using$.html#apply[A<:AutoCloseable,T](resource:A)(thunk:A=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/util\/Using$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/util\/Using$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/util\/Using$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/util\/Using$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/util\/Using$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/util\/Using$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/util\/Using$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/util\/Using$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/util\/Using$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/util\/Using$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/util\/Using$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/util\/Using$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/util\/Using$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/util\/Using$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/util\/Using$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/util\/Using$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/util\/Using$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "kafka4m" : [{"name" : "kafka4m.Kafka4mApp", "shortDescription" : "An ETL entry point to read data into or out of kafka", "object" : "kafka4m\/Kafka4mApp$.html", "members_object" : [{"label" : "SecureConfigParsed", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigParsed", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigParsedextendsConfigApp.this.SecureConfigStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "SecureConfigDoesntExist", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigDoesntExist", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigDoesntExistextendsConfigApp.this.SecureConfigStatewithProductwithSerializable", "kind" : "case class"}, {"label" : "SecureConfigState", "tail" : "", "member" : "args4c.ConfigApp.SecureConfigState", "link" : "kafka4m\/Kafka4mApp$.html#SecureConfigStateextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "RichArgs", "tail" : "", "member" : "args4c.LowPriorityArgs4cImplicits.RichArgs", "link" : "kafka4m\/Kafka4mApp$.html#RichArgsextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichString", "tail" : "", "member" : "args4c.LowPriorityArgs4cImplicits.RichString", "link" : "kafka4m\/Kafka4mApp$.html#RichStringextendsAnyRef", "kind" : "implicit class"}, {"label" : "run", "tail" : "(config: Config): Cancelable", "member" : "kafka4m.Kafka4mApp.run", "link" : "kafka4m\/Kafka4mApp$.html#run(config:com.typesafe.config.Config):monix.execution.Cancelable", "kind" : "def"}, {"label" : "writeToKafka", "tail" : "(config: Config, data: Observable[(String, Array[Byte])])(scheduler: Scheduler): CancelableFuture[Long]", "member" : "kafka4m.Kafka4mApp.writeToKafka", "link" : "kafka4m\/Kafka4mApp$.html#writeToKafka(config:com.typesafe.config.Config,data:monix.reactive.Observable[(String,Array[Byte])])(implicitscheduler:monix.execution.Scheduler):monix.execution.CancelableFuture[Long]", "kind" : "def"}, {"label" : "writeToKafka", "tail" : "(config: Config)(scheduler: Scheduler): (Cancelable, CancelableFuture[Long])", "member" : "kafka4m.Kafka4mApp.writeToKafka", "link" : "kafka4m\/Kafka4mApp$.html#writeToKafka(config:com.typesafe.config.Config)(implicitscheduler:monix.execution.Scheduler):(monix.execution.Cancelable,monix.execution.CancelableFuture[Long])", "kind" : "def"}, {"label" : "readFromKafka", "tail" : "(config: Config)(scheduler: Scheduler): (Cancelable, Observable[(TimeBucket, Path)])", "member" : "kafka4m.Kafka4mApp.readFromKafka", "link" : "kafka4m\/Kafka4mApp$.html#readFromKafka(config:com.typesafe.config.Config)(implicitscheduler:monix.execution.Scheduler):(monix.execution.Cancelable,monix.reactive.Observable[(kafka4m.partitions.TimeBucket,java.nio.file.Path)])", "kind" : "def"}, {"label" : "startupLog", "tail" : "(action: String, config: Config): String", "member" : "kafka4m.Kafka4mApp.startupLog", "link" : "kafka4m\/Kafka4mApp$.html#startupLog(action:String,config:com.typesafe.config.Config):String", "kind" : "def"}, {"label" : "summary", "tail" : "(config: Config): String", "member" : "kafka4m.Kafka4mApp.summary", "link" : "kafka4m\/Kafka4mApp$.html#summary(config:com.typesafe.config.Config):String", "kind" : "def"}, {"label" : "mainDelegate", "tail" : "(args: Array[String]): Option[Cancelable]", "member" : "kafka4m.Kafka4mApp.mainDelegate", "link" : "kafka4m\/Kafka4mApp$.html#mainDelegate(args:Array[String]):Option[monix.execution.Cancelable]", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "kafka4m.Kafka4mApp.main", "link" : "kafka4m\/Kafka4mApp$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "kafka4m.Kafka4mApp.Result", "link" : "kafka4m\/Kafka4mApp$.html#Result=monix.execution.Cancelable", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/Kafka4mApp$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "defaultSecureConfigArgFlag", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultSecureConfigArgFlag", "link" : "kafka4m\/Kafka4mApp$.html#defaultSecureConfigArgFlag:String", "kind" : "def"}, {"label" : "defaultSetupUserArgFlag", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultSetupUserArgFlag", "link" : "kafka4m\/Kafka4mApp$.html#defaultSetupUserArgFlag:String", "kind" : "def"}, {"label" : "defaultIgnoreDefaultSecureConfigArg", "tail" : "(): String", "member" : "args4c.ConfigApp.defaultIgnoreDefaultSecureConfigArg", "link" : "kafka4m\/Kafka4mApp$.html#defaultIgnoreDefaultSecureConfigArg:String", "kind" : "def"}, {"label" : "secureConfigForArgs", "tail" : "(userArgs: Array[String], ignoreDefaultSecureConfigArg: String, pathToSecureConfigArg: String): SecureConfigState", "member" : "args4c.ConfigApp.secureConfigForArgs", "link" : "kafka4m\/Kafka4mApp$.html#secureConfigForArgs(userArgs:Array[String],ignoreDefaultSecureConfigArg:String,pathToSecureConfigArg:String):ConfigApp.this.SecureConfigState", "kind" : "def"}, {"label" : "pathToSecureConfigFromArgs", "tail" : "(userArgs: Array[String], pathToSecureConfigArg: String): Option[String]", "member" : "args4c.ConfigApp.pathToSecureConfigFromArgs", "link" : "kafka4m\/Kafka4mApp$.html#pathToSecureConfigFromArgs(userArgs:Array[String],pathToSecureConfigArg:String):Option[String]", "kind" : "def"}, {"label" : "onUnrecognizedUserArg", "tail" : "(allowedArgs: Set[String])(arg: String): Config", "member" : "args4c.ConfigApp.onUnrecognizedUserArg", "link" : "kafka4m\/Kafka4mApp$.html#onUnrecognizedUserArg(allowedArgs:Set[String])(arg:String):com.typesafe.config.Config", "kind" : "def"}, {"label" : "showValue", "tail" : "(value: String, config: Config): Unit", "member" : "args4c.ConfigApp.showValue", "link" : "kafka4m\/Kafka4mApp$.html#showValue(value:String,config:com.typesafe.config.Config):Unit", "kind" : "def"}, {"label" : "defaultConfig", "tail" : "(): Config", "member" : "args4c.ConfigApp.defaultConfig", "link" : "kafka4m\/Kafka4mApp$.html#defaultConfig():com.typesafe.config.Config", "kind" : "def"}, {"label" : "obscure", "tail" : "(securePathsOpt: Option[Seq[String]])(configPath: String, value: String): String", "member" : "args4c.ConfigApp.obscure", "link" : "kafka4m\/Kafka4mApp$.html#obscure(securePathsOpt:Option[Seq[String]])(configPath:String,value:String):String", "kind" : "def"}, {"label" : "isSetupSpecified", "tail" : "(userArgs: Array[String], setupArg: String): Boolean", "member" : "args4c.ConfigApp.isSetupSpecified", "link" : "kafka4m\/Kafka4mApp$.html#isSetupSpecified(userArgs:Array[String],setupArg:String):Boolean", "kind" : "def"}, {"label" : "runMain", "tail" : "(userArgs: Array[String], setupUserArgFlag: String, ignoreDefaultSecureConfigArg: String, pathToSecureConfigArgFlag: String): Option[Result]", "member" : "args4c.ConfigApp.runMain", "link" : "kafka4m\/Kafka4mApp$.html#runMain(userArgs:Array[String],setupUserArgFlag:String,ignoreDefaultSecureConfigArg:String,pathToSecureConfigArgFlag:String):Option[ConfigApp.this.Result]", "kind" : "def"}, {"label" : "runWithConfig", "tail" : "(userArgs: Array[String], pathToSecureConfig: Path, secureConfigState: SecureConfigState, parsedConfig: Config): Option[Result]", "member" : "args4c.ConfigApp.runWithConfig", "link" : "kafka4m\/Kafka4mApp$.html#runWithConfig(userArgs:Array[String],pathToSecureConfig:java.nio.file.Path,secureConfigState:ConfigApp.this.SecureConfigState,parsedConfig:com.typesafe.config.Config):Option[ConfigApp.this.Result]", "kind" : "def"}, {"label" : "configKeyForRequiredEntries", "tail" : ": String", "member" : "args4c.ConfigApp.configKeyForRequiredEntries", "link" : "kafka4m\/Kafka4mApp$.html#configKeyForRequiredEntries:String", "kind" : "val"}, {"label" : "missingRequiredConfigEntriesForConfig", "tail" : "(resolvedConfig: Config): Seq[String]", "member" : "args4c.ConfigApp.missingRequiredConfigEntriesForConfig", "link" : "kafka4m\/Kafka4mApp$.html#missingRequiredConfigEntriesForConfig(resolvedConfig:com.typesafe.config.Config):Seq[String]", "kind" : "def"}, {"label" : "secureConfig", "tail" : "(): SecureConfig", "member" : "args4c.ConfigApp.secureConfig", "link" : "kafka4m\/Kafka4mApp$.html#secureConfig:args4c.SecureConfig", "kind" : "def"}, {"label" : "configAsRichConfig", "tail" : "(c: Config): RichConfig", "member" : "args4c.LowPriorityArgs4cImplicits.configAsRichConfig", "link" : "kafka4m\/Kafka4mApp$.html#configAsRichConfig(c:com.typesafe.config.Config):args4c.RichConfig", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/Kafka4mApp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/Kafka4mApp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/Kafka4mApp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/Kafka4mApp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/Kafka4mApp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/Kafka4mApp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/Kafka4mApp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/Kafka4mApp$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/Kafka4mApp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/Kafka4mApp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/Kafka4mApp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/Kafka4mApp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/Kafka4mApp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/Kafka4mApp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/Kafka4mApp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/Kafka4mApp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/Kafka4mApp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "kafka4m.partitions" : [{"name" : "kafka4m.partitions.AppendData", "shortDescription" : "", "members_case class" : [{"member" : "kafka4m.partitions.AppendData#<init>", "error" : "unsupported entity"}, {"label" : "record", "tail" : ": A", "member" : "kafka4m.partitions.AppendData.record", "link" : "kafka4m\/partitions\/AppendData.html#record:A", "kind" : "val"}, {"label" : "bucket", "tail" : ": K", "member" : "kafka4m.partitions.AppendData.bucket", "link" : "kafka4m\/partitions\/AppendData.html#bucket:K", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/partitions\/AppendData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/AppendData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/AppendData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/AppendData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/AppendData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/AppendData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/AppendData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/AppendData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/AppendData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/AppendData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/AppendData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/AppendData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/AppendData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/AppendData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/AppendData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/AppendData.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.FlushBucket", "shortDescription" : "", "members_case class" : [{"member" : "kafka4m.partitions.FlushBucket#<init>", "error" : "unsupported entity"}, {"label" : "bucket", "tail" : ": K", "member" : "kafka4m.partitions.FlushBucket.bucket", "link" : "kafka4m\/partitions\/FlushBucket.html#bucket:K", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/partitions\/FlushBucket.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/FlushBucket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/FlushBucket.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/FlushBucket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/FlushBucket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/FlushBucket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/FlushBucket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/FlushBucket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/FlushBucket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/FlushBucket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/FlushBucket.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/FlushBucket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/FlushBucket.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/FlushBucket.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/FlushBucket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/FlushBucket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/FlushBucket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/FlushBucket.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.ForceFlushBuckets", "shortDescription" : "", "members_case class" : [{"member" : "kafka4m.partitions.ForceFlushBuckets#<init>", "error" : "unsupported entity"}, {"label" : "signalComplete", "tail" : ": Boolean", "member" : "kafka4m.partitions.ForceFlushBuckets.signalComplete", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#signalComplete:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/ForceFlushBuckets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/ForceFlushBuckets.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.HasTimestamp", "object" : "kafka4m\/partitions\/HasTimestamp$.html", "members_object" : [{"label" : "identity", "tail" : "", "member" : "kafka4m.partitions.HasTimestamp.identity", "link" : "kafka4m\/partitions\/HasTimestamp$.html#identity", "kind" : "implicit object"}, {"label" : "consumerRecordHasTimestamp", "tail" : "(): HasTimestamp[ConsumerRecord[K, V]]", "member" : "kafka4m.partitions.HasTimestamp.consumerRecordHasTimestamp", "link" : "kafka4m\/partitions\/HasTimestamp$.html#consumerRecordHasTimestamp[K,V]:kafka4m.partitions.HasTimestamp[org.apache.kafka.clients.consumer.ConsumerRecord[K,V]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(ht: HasTimestamp[A]): HasTimestamp[A]", "member" : "kafka4m.partitions.HasTimestamp.apply", "link" : "kafka4m\/partitions\/HasTimestamp$.html#apply[A](implicitht:kafka4m.partitions.HasTimestamp[A]):kafka4m.partitions.HasTimestamp[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/HasTimestamp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/HasTimestamp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/HasTimestamp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/HasTimestamp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/HasTimestamp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/HasTimestamp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/HasTimestamp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/HasTimestamp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/HasTimestamp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/HasTimestamp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/HasTimestamp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/HasTimestamp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/HasTimestamp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/HasTimestamp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/partitions\/HasTimestamp.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/HasTimestamp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/HasTimestamp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/HasTimestamp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/HasTimestamp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/HasTimestamp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/HasTimestamp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/HasTimestamp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/HasTimestamp.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/HasTimestamp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/HasTimestamp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/HasTimestamp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/HasTimestamp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/HasTimestamp.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/HasTimestamp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/HasTimestamp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/HasTimestamp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "timestamp", "tail" : "(value: A): ZonedDateTime", "member" : "kafka4m.partitions.HasTimestamp.timestamp", "link" : "kafka4m\/partitions\/HasTimestamp.html#timestamp(value:A):java.time.ZonedDateTime", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "kafka4m.partitions.MiniBatchState", "shortDescription" : "State which represents the consumption of 'ConsumerRecords' from kafka and partition them into buckets.", "object" : "kafka4m\/partitions\/MiniBatchState$.html", "members_object" : [{"label" : "apply", "tail" : "(miniBatchSize: Int, strictBatchSizes: Boolean)(partitioner: Partitioner[A, K]): MiniBatchState[A, K]", "member" : "kafka4m.partitions.MiniBatchState.apply", "link" : "kafka4m\/partitions\/MiniBatchState$.html#apply[A,K](miniBatchSize:Int,strictBatchSizes:Boolean)(implicitpartitioner:kafka4m.partitions.Partitioner[A,K]):kafka4m.partitions.MiniBatchState[A,K]", "kind" : "def"}, {"label" : "partitionEvents", "tail" : "(source: Observable[A], miniBatchSize: Int, strictBatchSizes: Boolean)(partitioner: Partitioner[A, K]): Observable[PartitionEvent[A, K]]", "member" : "kafka4m.partitions.MiniBatchState.partitionEvents", "link" : "kafka4m\/partitions\/MiniBatchState$.html#partitionEvents[A,K](source:monix.reactive.Observable[A],miniBatchSize:Int,strictBatchSizes:Boolean)(implicitpartitioner:kafka4m.partitions.Partitioner[A,K]):monix.reactive.Observable[kafka4m.partitions.PartitionEvent[A,K]]", "kind" : "def"}, {"label" : "byTime", "tail" : "(source: Observable[A], miniBatchSize: Int, timeBucketSize: FiniteDuration)(arg0: HasTimestamp[A]): Observable[PartitionEvent[A, TimeBucket]]", "member" : "kafka4m.partitions.MiniBatchState.byTime", "link" : "kafka4m\/partitions\/MiniBatchState$.html#byTime[A](source:monix.reactive.Observable[A],miniBatchSize:Int,timeBucketSize:scala.concurrent.duration.FiniteDuration)(implicitevidence$1:kafka4m.partitions.HasTimestamp[A]):monix.reactive.Observable[kafka4m.partitions.PartitionEvent[A,kafka4m.partitions.TimeBucket]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/MiniBatchState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/MiniBatchState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/MiniBatchState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/MiniBatchState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/MiniBatchState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/MiniBatchState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/MiniBatchState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/MiniBatchState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/MiniBatchState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/MiniBatchState$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/MiniBatchState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/MiniBatchState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/MiniBatchState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/MiniBatchState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/MiniBatchState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/MiniBatchState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/MiniBatchState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/MiniBatchState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/MiniBatchState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "update", "tail" : "(record: A, messageNumber: Long): (MiniBatchState[A, K], Seq[PartitionEvent[A, K]])", "member" : "kafka4m.partitions.MiniBatchState.update", "link" : "kafka4m\/partitions\/MiniBatchState.html#update(record:A,messageNumber:Long):(kafka4m.partitions.MiniBatchState[A,K],Seq[kafka4m.partitions.PartitionEvent[A,K]])", "kind" : "def"}, {"label" : "lastReceivedPerBucket", "tail" : ": Map[K, Long]", "member" : "kafka4m.partitions.MiniBatchState.lastReceivedPerBucket", "link" : "kafka4m\/partitions\/MiniBatchState.html#lastReceivedPerBucket:Map[K,Long]", "kind" : "val"}, {"label" : "strict", "tail" : ": Boolean", "member" : "kafka4m.partitions.MiniBatchState.strict", "link" : "kafka4m\/partitions\/MiniBatchState.html#strict:Boolean", "kind" : "val"}, {"label" : "indicesRemaining", "tail" : ": Long", "member" : "kafka4m.partitions.MiniBatchState.indicesRemaining", "link" : "kafka4m\/partitions\/MiniBatchState.html#indicesRemaining:Long", "kind" : "val"}, {"label" : "miniBatchSize", "tail" : ": Int", "member" : "kafka4m.partitions.MiniBatchState.miniBatchSize", "link" : "kafka4m\/partitions\/MiniBatchState.html#miniBatchSize:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/partitions\/MiniBatchState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/MiniBatchState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/MiniBatchState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/MiniBatchState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/MiniBatchState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/MiniBatchState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/MiniBatchState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/MiniBatchState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/MiniBatchState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/MiniBatchState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/MiniBatchState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/MiniBatchState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/MiniBatchState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/MiniBatchState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/MiniBatchState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/MiniBatchState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/MiniBatchState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/MiniBatchState.html", "kind" : "case class"}, {"name" : "kafka4m.partitions.Partitioner", "object" : "kafka4m\/partitions\/Partitioner$.html", "members_object" : [{"label" : "byTime", "tail" : "(minutesPerBucket: Int)(arg0: HasTimestamp[A]): Partitioner[A, TimeBucket]", "member" : "kafka4m.partitions.Partitioner.byTime", "link" : "kafka4m\/partitions\/Partitioner$.html#byTime[A](minutesPerBucket:Int)(implicitevidence$1:kafka4m.partitions.HasTimestamp[A]):kafka4m.partitions.Partitioner[A,kafka4m.partitions.TimeBucket]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/Partitioner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/Partitioner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/Partitioner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/Partitioner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/Partitioner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/Partitioner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/Partitioner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/Partitioner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/Partitioner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/Partitioner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/Partitioner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/Partitioner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/Partitioner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/Partitioner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/Partitioner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/Partitioner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/Partitioner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/Partitioner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/Partitioner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/partitions\/Partitioner.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/Partitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/Partitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/Partitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/Partitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/Partitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/Partitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/Partitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/Partitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/Partitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/Partitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/Partitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/Partitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/Partitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/Partitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/Partitioner.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/Partitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/Partitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/Partitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/Partitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bucketForValue", "tail" : "(value: A): B", "member" : "kafka4m.partitions.Partitioner.bucketForValue", "link" : "kafka4m\/partitions\/Partitioner.html#bucketForValue(value:A):B", "kind" : "abstract def"}], "shortDescription" : "A means to place values of type A into buckets of type B"}, {"name" : "kafka4m.partitions.PartitionEvent", "trait" : "kafka4m\/partitions\/PartitionEvent.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/PartitionEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/PartitionEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/PartitionEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/PartitionEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/PartitionEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/PartitionEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/PartitionEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/PartitionEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/PartitionEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/PartitionEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/PartitionEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/PartitionEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/PartitionEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/PartitionEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/PartitionEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/PartitionEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/PartitionEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/PartitionEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/PartitionEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The data passing through will be partitioned into different buckets."}, {"name" : "kafka4m.partitions.TimeBucket", "shortDescription" : "", "object" : "kafka4m\/partitions\/TimeBucket$.html", "members_object" : [{"label" : "apply", "tail" : "(minutes: Int, zonedDT: ZonedDateTime): TimeBucket", "member" : "kafka4m.partitions.TimeBucket.apply", "link" : "kafka4m\/partitions\/TimeBucket$.html#apply(minutes:Int,zonedDT:java.time.ZonedDateTime):kafka4m.partitions.TimeBucket", "kind" : "def"}, {"label" : "apply", "tail" : "(minutes: Int, epochMilli: Long): TimeBucket", "member" : "kafka4m.partitions.TimeBucket.apply", "link" : "kafka4m\/partitions\/TimeBucket$.html#apply(minutes:Int,epochMilli:Long):kafka4m.partitions.TimeBucket", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/TimeBucket$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/TimeBucket$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/TimeBucket$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/TimeBucket$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/TimeBucket$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/TimeBucket$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/TimeBucket$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/TimeBucket$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/TimeBucket$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/partitions\/TimeBucket$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/TimeBucket$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/partitions\/TimeBucket$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/partitions\/TimeBucket$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/TimeBucket$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "asFileName", "tail" : "(first: ZonedDateTime): String", "member" : "kafka4m.partitions.TimeBucket.asFileName", "link" : "kafka4m\/partitions\/TimeBucket.html#asFileName(first:java.time.ZonedDateTime):String", "kind" : "def"}, {"member" : "kafka4m.partitions.TimeBucket#<init>", "error" : "unsupported entity"}, {"label" : "toMinute", "tail" : ": Int", "member" : "kafka4m.partitions.TimeBucket.toMinute", "link" : "kafka4m\/partitions\/TimeBucket.html#toMinute:Int", "kind" : "val"}, {"label" : "fromMinute", "tail" : ": Int", "member" : "kafka4m.partitions.TimeBucket.fromMinute", "link" : "kafka4m\/partitions\/TimeBucket.html#fromMinute:Int", "kind" : "val"}, {"label" : "hour", "tail" : ": Int", "member" : "kafka4m.partitions.TimeBucket.hour", "link" : "kafka4m\/partitions\/TimeBucket.html#hour:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/partitions\/TimeBucket.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/partitions\/TimeBucket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/partitions\/TimeBucket.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/partitions\/TimeBucket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/partitions\/TimeBucket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/partitions\/TimeBucket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/partitions\/TimeBucket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/partitions\/TimeBucket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/partitions\/TimeBucket.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/partitions\/TimeBucket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/partitions\/TimeBucket.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/partitions\/TimeBucket.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/partitions\/TimeBucket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/partitions\/TimeBucket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/partitions\/TimeBucket.html", "kind" : "case class"}], "kafka4m.jmx" : [{"name" : "kafka4m.jmx.JMXClient", "shortDescription" : "Some utility over an MBeanServerConnection", "object" : "kafka4m\/jmx\/JMXClient$.html", "members_object" : [{"label" : "apply", "tail" : "(serviceUrl: String): JMXClient", "member" : "kafka4m.jmx.JMXClient.apply", "link" : "kafka4m\/jmx\/JMXClient$.html#apply(serviceUrl:String):kafka4m.jmx.JMXClient", "kind" : "def"}, {"label" : "forHostPort", "tail" : "(hostPort: String): JMXClient", "member" : "kafka4m.jmx.JMXClient.forHostPort", "link" : "kafka4m\/jmx\/JMXClient$.html#forHostPort(hostPort:String):kafka4m.jmx.JMXClient", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/JMXClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/JMXClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/JMXClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/JMXClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/JMXClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/JMXClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/JMXClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/JMXClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/JMXClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/JMXClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/JMXClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/JMXClient$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/JMXClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/JMXClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/JMXClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/JMXClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "find", "tail" : "(name: ObjectName)(arg0: ClassTag[A]): Option[Map[String, Try[AnyRef]]]", "member" : "kafka4m.jmx.JMXClient.find", "link" : "kafka4m\/jmx\/JMXClient.html#find[A](name:javax.management.ObjectName)(implicitevidence$1:scala.reflect.ClassTag[A]):Option[Map[String,scala.util.Try[AnyRef]]]", "kind" : "def"}, {"member" : "kafka4m.jmx.JMXClient#<init>", "error" : "unsupported entity"}, {"label" : "server", "tail" : ": MBeanServerConnection", "member" : "kafka4m.jmx.JMXClient.server", "link" : "kafka4m\/jmx\/JMXClient.html#server:javax.management.MBeanServerConnection", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/jmx\/JMXClient.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/JMXClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/JMXClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/JMXClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/JMXClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/JMXClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/JMXClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/JMXClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/JMXClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/JMXClient.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/JMXClient.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/JMXClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/JMXClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/JMXClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/jmx\/JMXClient.html", "kind" : "case class"}, {"name" : "kafka4m.jmx.JMXSupport", "object" : "kafka4m\/jmx\/JMXSupport$.html", "members_object" : [{"label" : "nameForClass", "tail" : "(c1ass: Class[_], name: String): ObjectName", "member" : "kafka4m.jmx.JMXSupport.nameForClass", "link" : "kafka4m\/jmx\/JMXSupport$.html#nameForClass(c1ass:Class[_],name:String):javax.management.ObjectName", "kind" : "def"}, {"label" : "nameFor", "tail" : "(name: String)(classTag: ClassTag[A]): ObjectName", "member" : "kafka4m.jmx.JMXSupport.nameFor", "link" : "kafka4m\/jmx\/JMXSupport$.html#nameFor[A](name:String)(implicitclassTag:scala.reflect.ClassTag[A]):javax.management.ObjectName", "kind" : "def"}, {"label" : "nameFor", "tail" : "(classTag: ClassTag[A]): ObjectName", "member" : "kafka4m.jmx.JMXSupport.nameFor", "link" : "kafka4m\/jmx\/JMXSupport$.html#nameFor[A](implicitclassTag:scala.reflect.ClassTag[A]):javax.management.ObjectName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/JMXSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/JMXSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/JMXSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/JMXSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/JMXSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/JMXSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/JMXSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/JMXSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/JMXSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/JMXSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/JMXSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/JMXSupport$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/JMXSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/JMXSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/JMXSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/JMXSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/jmx\/JMXSupport.html", "kind" : "trait", "members_trait" : [{"label" : "unregisterAsMBean", "tail" : "(mBeanName: ObjectName): Unit", "member" : "kafka4m.jmx.JMXSupport.unregisterAsMBean", "link" : "kafka4m\/jmx\/JMXSupport.html#unregisterAsMBean(mBeanName:javax.management.ObjectName):Unit", "kind" : "def"}, {"label" : "registerAsMBean", "tail" : "(mBeanName: ObjectName): ObjectInstance", "member" : "kafka4m.jmx.JMXSupport.registerAsMBean", "link" : "kafka4m\/jmx\/JMXSupport.html#registerAsMBean(mBeanName:javax.management.ObjectName):javax.management.ObjectInstance", "kind" : "def"}, {"label" : "registerAsMBean", "tail" : "(name: String): ObjectInstance", "member" : "kafka4m.jmx.JMXSupport.registerAsMBean", "link" : "kafka4m\/jmx\/JMXSupport.html#registerAsMBean(name:String):javax.management.ObjectInstance", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/JMXSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/JMXSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/JMXSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/JMXSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/JMXSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/JMXSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/JMXSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/JMXSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/JMXSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/JMXSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/JMXSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/JMXSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/JMXSupport.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/JMXSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/JMXSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/JMXSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/JMXSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A mix-in trait which exposes a means to register a class as an MBean"}, {"name" : "kafka4m.jmx.ReadWriteCount", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.jmx.ReadWriteCount.close", "link" : "kafka4m\/jmx\/ReadWriteCount.html#close():Unit", "kind" : "def"}, {"label" : "description", "tail" : "(): String", "member" : "kafka4m.jmx.ReadWriteCount.description", "link" : "kafka4m\/jmx\/ReadWriteCount.html#description():String", "kind" : "def"}, {"label" : "getHealthy", "tail" : ": Boolean", "member" : "kafka4m.jmx.ReadWriteCount.getHealthy", "link" : "kafka4m\/jmx\/ReadWriteCount.html#getHealthy:Boolean", "kind" : "val"}, {"label" : "getWrites", "tail" : "(): Throughput", "member" : "kafka4m.jmx.ReadWriteCount.getWrites", "link" : "kafka4m\/jmx\/ReadWriteCount.html#getWrites():kafka4m.jmx.Throughput", "kind" : "def"}, {"label" : "getReads", "tail" : "(): Throughput", "member" : "kafka4m.jmx.ReadWriteCount.getReads", "link" : "kafka4m\/jmx\/ReadWriteCount.html#getReads():kafka4m.jmx.Throughput", "kind" : "def"}, {"label" : "getStarted", "tail" : ": String", "member" : "kafka4m.jmx.ReadWriteCount.getStarted", "link" : "kafka4m\/jmx\/ReadWriteCount.html#getStarted:String", "kind" : "val"}, {"label" : "writeCounter", "tail" : "(): AtomicLong", "member" : "kafka4m.jmx.ReadWriteCount.writeCounter", "link" : "kafka4m\/jmx\/ReadWriteCount.html#writeCounter:java.util.concurrent.atomic.AtomicLong", "kind" : "def"}, {"label" : "readCounter", "tail" : "(): AtomicLong", "member" : "kafka4m.jmx.ReadWriteCount.readCounter", "link" : "kafka4m\/jmx\/ReadWriteCount.html#readCounter:java.util.concurrent.atomic.AtomicLong", "kind" : "def"}, {"label" : "incWrites", "tail" : "(): Long", "member" : "kafka4m.jmx.ReadWriteCount.incWrites", "link" : "kafka4m\/jmx\/ReadWriteCount.html#incWrites():Long", "kind" : "def"}, {"label" : "incReads", "tail" : "(): Long", "member" : "kafka4m.jmx.ReadWriteCount.incReads", "link" : "kafka4m\/jmx\/ReadWriteCount.html#incReads():Long", "kind" : "def"}, {"label" : "writes", "tail" : ": Builder", "member" : "kafka4m.jmx.ReadWriteCount.writes", "link" : "kafka4m\/jmx\/ReadWriteCount.html#writes:kafka4m.jmx.Throughput.Builder", "kind" : "val"}, {"label" : "reads", "tail" : ": Builder", "member" : "kafka4m.jmx.ReadWriteCount.reads", "link" : "kafka4m\/jmx\/ReadWriteCount.html#reads:kafka4m.jmx.Throughput.Builder", "kind" : "val"}, {"member" : "kafka4m.jmx.ReadWriteCount#<init>", "error" : "unsupported entity"}, {"label" : "unregisterAsMBean", "tail" : "(mBeanName: ObjectName): Unit", "member" : "kafka4m.jmx.JMXSupport.unregisterAsMBean", "link" : "kafka4m\/jmx\/ReadWriteCount.html#unregisterAsMBean(mBeanName:javax.management.ObjectName):Unit", "kind" : "def"}, {"label" : "registerAsMBean", "tail" : "(mBeanName: ObjectName): ObjectInstance", "member" : "kafka4m.jmx.JMXSupport.registerAsMBean", "link" : "kafka4m\/jmx\/ReadWriteCount.html#registerAsMBean(mBeanName:javax.management.ObjectName):javax.management.ObjectInstance", "kind" : "def"}, {"label" : "registerAsMBean", "tail" : "(name: String): ObjectInstance", "member" : "kafka4m.jmx.JMXSupport.registerAsMBean", "link" : "kafka4m\/jmx\/ReadWriteCount.html#registerAsMBean(name:String):javax.management.ObjectInstance", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/ReadWriteCount.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/ReadWriteCount.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/ReadWriteCount.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/ReadWriteCount.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/ReadWriteCount.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/ReadWriteCount.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/ReadWriteCount.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCount.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCount.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCount.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/ReadWriteCount.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/ReadWriteCount.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/ReadWriteCount.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/ReadWriteCount.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/ReadWriteCount.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/ReadWriteCount.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/ReadWriteCount.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/ReadWriteCount.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/ReadWriteCount.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/jmx\/ReadWriteCount.html", "kind" : "class"}, {"name" : "kafka4m.jmx.ReadWriteCountMBean", "object" : "kafka4m\/jmx\/ReadWriteCountMBean$.html", "members_object" : [{"label" : "Remote", "tail" : "", "member" : "kafka4m.jmx.ReadWriteCountMBean.Remote", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#RemoteextendsReadWriteCountMBeanwithProductwithSerializable", "kind" : "case class"}, {"label" : "remote", "tail" : "(client: JMXClient, mbeanName: ObjectName): Remote", "member" : "kafka4m.jmx.ReadWriteCountMBean.remote", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#remote(client:kafka4m.jmx.JMXClient,mbeanName:javax.management.ObjectName):kafka4m.jmx.ReadWriteCountMBean.Remote", "kind" : "def"}, {"label" : "pretty", "tail" : "(bean: ReadWriteCountMBean): String", "member" : "kafka4m.jmx.ReadWriteCountMBean.pretty", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#pretty(bean:kafka4m.jmx.ReadWriteCountMBean):String", "kind" : "def"}, {"label" : "apply", "tail" : "(rootConfig: Config): Remote", "member" : "kafka4m.jmx.ReadWriteCountMBean.apply", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#apply(rootConfig:com.typesafe.config.Config):kafka4m.jmx.ReadWriteCountMBean.Remote", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/ReadWriteCountMBean$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "kafka4m\/jmx\/ReadWriteCountMBean.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getWrites", "tail" : "(): Throughput", "member" : "kafka4m.jmx.ReadWriteCountMBean.getWrites", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#getWrites():kafka4m.jmx.Throughput", "kind" : "abstract def"}, {"label" : "getReads", "tail" : "(): Throughput", "member" : "kafka4m.jmx.ReadWriteCountMBean.getReads", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#getReads():kafka4m.jmx.Throughput", "kind" : "abstract def"}, {"label" : "getHealthy", "tail" : "(): Boolean", "member" : "kafka4m.jmx.ReadWriteCountMBean.getHealthy", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#getHealthy():Boolean", "kind" : "abstract def"}, {"label" : "getStarted", "tail" : "(): String", "member" : "kafka4m.jmx.ReadWriteCountMBean.getStarted", "link" : "kafka4m\/jmx\/ReadWriteCountMBean.html#getStarted():String", "kind" : "abstract def"}], "shortDescription" : "An mbean which counts reads\/writes"}, {"name" : "kafka4m.jmx.Throughput", "shortDescription" : "A basic representation of some throughput", "object" : "kafka4m\/jmx\/Throughput$.html", "members_object" : [{"label" : "Builder", "tail" : "", "member" : "kafka4m.jmx.Throughput.Builder", "link" : "kafka4m\/jmx\/Throughput$.html#BuilderextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/Throughput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/Throughput$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/Throughput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/Throughput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/Throughput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/Throughput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/Throughput$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/Throughput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/Throughput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/Throughput$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/Throughput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/Throughput$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/jmx\/Throughput$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/Throughput$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/jmx\/Throughput$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/jmx\/Throughput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/Throughput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/Throughput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/Throughput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "meanMessagesPerSecond", "tail" : "(): Int", "member" : "kafka4m.jmx.Throughput.meanMessagesPerSecond", "link" : "kafka4m\/jmx\/Throughput.html#meanMessagesPerSecond:Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "kafka4m.jmx.Throughput.toString", "link" : "kafka4m\/jmx\/Throughput.html#toString():String", "kind" : "def"}, {"member" : "kafka4m.jmx.Throughput#<init>", "error" : "unsupported entity"}, {"label" : "totalMessages", "tail" : ": Long", "member" : "kafka4m.jmx.Throughput.totalMessages", "link" : "kafka4m\/jmx\/Throughput.html#totalMessages:Long", "kind" : "val"}, {"label" : "elapsedMillisSinceLastFlush", "tail" : ": Long", "member" : "kafka4m.jmx.Throughput.elapsedMillisSinceLastFlush", "link" : "kafka4m\/jmx\/Throughput.html#elapsedMillisSinceLastFlush:Long", "kind" : "val"}, {"label" : "latestMessageCount", "tail" : ": Long", "member" : "kafka4m.jmx.Throughput.latestMessageCount", "link" : "kafka4m\/jmx\/Throughput.html#latestMessageCount:Long", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/jmx\/Throughput.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/jmx\/Throughput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/jmx\/Throughput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/jmx\/Throughput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/jmx\/Throughput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/jmx\/Throughput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/jmx\/Throughput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/jmx\/Throughput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/Throughput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/Throughput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/jmx\/Throughput.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/jmx\/Throughput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/jmx\/Throughput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/jmx\/Throughput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/jmx\/Throughput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/jmx\/Throughput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/jmx\/Throughput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/jmx\/Throughput.html", "kind" : "case class"}], "kafka4m.admin" : [{"name" : "kafka4m.admin.ConsumerGroupStats", "shortDescription" : "A case class representation of the Kafka Stats", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "kafka4m.admin.ConsumerGroupStats.toString", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#toString():String", "kind" : "def"}, {"label" : "offsetsByPartition", "tail" : "(): Map[Int, Long]", "member" : "kafka4m.admin.ConsumerGroupStats.offsetsByPartition", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#offsetsByPartition:Map[Int,Long]", "kind" : "def"}, {"label" : "topics", "tail" : "(): Set[String]", "member" : "kafka4m.admin.ConsumerGroupStats.topics", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#topics:Set[String]", "kind" : "def"}, {"label" : "forTopic", "tail" : "(topic: String): ConsumerGroupStats", "member" : "kafka4m.admin.ConsumerGroupStats.forTopic", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#forTopic(topic:String):kafka4m.admin.ConsumerGroupStats", "kind" : "def"}, {"member" : "kafka4m.admin.ConsumerGroupStats#<init>", "error" : "unsupported entity"}, {"label" : "offsetsByTopicPartition", "tail" : ": Map[TopicPartition, OffsetAndMetadata]", "member" : "kafka4m.admin.ConsumerGroupStats.offsetsByTopicPartition", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#offsetsByTopicPartition:Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]", "kind" : "val"}, {"label" : "groupId", "tail" : ": String", "member" : "kafka4m.admin.ConsumerGroupStats.groupId", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#groupId:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/ConsumerGroupStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/ConsumerGroupStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "kafka4m\/admin\/ConsumerGroupStats.html", "kind" : "case class"}, {"name" : "kafka4m.admin.RichKafkaAdmin", "shortDescription" : "A wrapper onto the admin API", "object" : "kafka4m\/admin\/RichKafkaAdmin$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.close", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#close():Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "kafka4m.admin.RichKafkaAdmin.isClosed", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#isClosed():Boolean", "kind" : "def"}, {"label" : "topics", "tail" : "(options: ListTopicsOptions)(ec: ExecutionContext): Future[Map[String, TopicListing]]", "member" : "kafka4m.admin.RichKafkaAdmin.topics", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#topics(options:org.apache.kafka.clients.admin.ListTopicsOptions)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Map[String,org.apache.kafka.clients.admin.TopicListing]]", "kind" : "def"}, {"label" : "consumerGroupsPositions", "tail" : "(groupId: String)(ec: ExecutionContext): CancelableFuture[Map[TopicPartition, OffsetAndMetadata]]", "member" : "kafka4m.admin.RichKafkaAdmin.consumerGroupsPositions", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#consumerGroupsPositions(groupId:String)(implicitec:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[Map[org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata]]", "kind" : "def"}, {"label" : "consumerGroups", "tail" : "(ec: ExecutionContext): CancelableFuture[Seq[ConsumerGroupListing]]", "member" : "kafka4m.admin.RichKafkaAdmin.consumerGroups", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#consumerGroups(implicitec:scala.concurrent.ExecutionContext):monix.execution.CancelableFuture[Seq[org.apache.kafka.clients.admin.ConsumerGroupListing]]", "kind" : "def"}, {"label" : "consumerGroupsStats", "tail" : "(ec: ExecutionContext): Future[Seq[ConsumerGroupStats]]", "member" : "kafka4m.admin.RichKafkaAdmin.consumerGroupsStats", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#consumerGroupsStats(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Seq[kafka4m.admin.ConsumerGroupStats]]", "kind" : "def"}, {"label" : "metrics", "tail" : "(): Map[MetricName, Metric]", "member" : "kafka4m.admin.RichKafkaAdmin.metrics", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#metrics:scala.collection.immutable.Map[org.apache.kafka.common.MetricName,org.apache.kafka.common.Metric]", "kind" : "def"}, {"label" : "createTopic", "tail" : "(topic: NewTopic): CreateTopicsResult", "member" : "kafka4m.admin.RichKafkaAdmin.createTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopic(topic:org.apache.kafka.clients.admin.NewTopic):org.apache.kafka.clients.admin.CreateTopicsResult", "kind" : "def"}, {"label" : "createTopic", "tail" : "(name: String, numPartitions: Int, replicationFactor: Short): CreateTopicsResult", "member" : "kafka4m.admin.RichKafkaAdmin.createTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopic(name:String,numPartitions:Int,replicationFactor:Short):org.apache.kafka.clients.admin.CreateTopicsResult", "kind" : "def"}, {"label" : "createTopicSync", "tail" : "(name: String, timeout: FiniteDuration): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.createTopicSync", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopicSync(name:String,timeout:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "createTopicBlocking", "tail" : "(topic: String, numPartitions: Int, replicationFactor: Short, timeout: FiniteDuration): Unit", "member" : "kafka4m.admin.RichKafkaAdmin.createTopicBlocking", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#createTopicBlocking(topic:String,numPartitions:Int,replicationFactor:Short,timeout:scala.concurrent.duration.FiniteDuration):Unit", "kind" : "def"}, {"label" : "getOrCreateTopic", "tail" : "(topic: String, numPartitions: Int, replicationFactor: Short, timeout: FiniteDuration)(ec: ExecutionContext): Future[Option[String]]", "member" : "kafka4m.admin.RichKafkaAdmin.getOrCreateTopic", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#getOrCreateTopic(topic:String,numPartitions:Int,replicationFactor:Short,timeout:scala.concurrent.duration.FiniteDuration)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Option[String]]", "kind" : "def"}, {"member" : "kafka4m.admin.RichKafkaAdmin#<init>", "error" : "unsupported entity"}, {"label" : "admin", "tail" : ": AdminClient", "member" : "kafka4m.admin.RichKafkaAdmin.admin", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#admin:org.apache.kafka.clients.admin.AdminClient", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/RichKafkaAdmin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rootConfig: Config): RichKafkaAdmin", "member" : "kafka4m.admin.RichKafkaAdmin.apply", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#apply(rootConfig:com.typesafe.config.Config):kafka4m.admin.RichKafkaAdmin", "kind" : "def"}, {"label" : "ensureTopicBlocking", "tail" : "(config: Config)(ec: ExecutionContext): Option[String]", "member" : "kafka4m.admin.RichKafkaAdmin.ensureTopicBlocking", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#ensureTopicBlocking(config:com.typesafe.config.Config)(implicitec:scala.concurrent.ExecutionContext):Option[String]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "kafka4m\/admin\/RichKafkaAdmin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "kafka4m\/admin\/RichKafkaAdmin.html", "kind" : "class"}]};